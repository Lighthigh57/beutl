name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  determine-version:
    runs-on: windows-latest
    outputs:
      semVer: ${{ steps.nbgv.outputs.SemVer2 }}
      simpleVer: ${{ steps.nbgv.outputs.SimpleVersion }}
      revision: ${{ steps.nbgv.outputs.VersionRevision }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Nerdbank.GitVersioning
        id: nbgv
        uses: dotnet/nbgv@v0.4.1

  build-executable:
    needs: [determine-version]
    runs-on: windows-latest
    strategy:
      matrix:
        rid: [linux_x64, win_x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Restore
        run: ./build.cmd Restore

      - name: Publish
        run: ./build.cmd Publish --runtime ${{matrix.rid}} --skip Restore

      - name: Zip
        run: ./build.cmd Zip --runtime ${{matrix.rid}} --skip Publish

      - name: Save
        uses: actions/upload-artifact@v3
        with:
          name: beutl-${{matrix.rid}}-${{needs.determine-version.outputs.semVer}}
          path: ./artifacts/*.zip

  build-windows-installer:
    needs: [determine-version, build-executable]
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          
      - uses: actions/download-artifact@v3
        with:
          name: beutl-win_x64-${{needs.determine-version.outputs.semVer}}
          path: artifacts

      - name: Extract zip
        run: |
          mkdir output/Beutl
          cd output/Beutl
          7z x ../../artifacts/beutl-win-x64-${{needs.determine-version.outputs.semVer}}.zip

      - name: Build installer
        run: ./build.cmd BuildInstaller --skip Publish

      - name: Save installer
        uses: actions/upload-artifact@v3
        with:
          name: beutl-setup
          path: ./artifacts/beutl-setup.exe
  
  build-debian-package:
    needs: [determine-version, build-executable]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          
      - uses: actions/download-artifact@v3
        with:
          name: beutl-linux_x64-${{needs.determine-version.outputs.semVer}}
          path: artifacts

      - name: Extract zip
        run: |
          cd packages/ubuntu22.04_amd64/usr
          mkdir -p lib/beutl
          cd lib/beutl
          unzip ${{ github.workspace }}/artifacts/beutl-linux-x64-${{needs.determine-version.outputs.semVer}}.zip

      - name: Change mode
        run: |
          cd packages/ubuntu22.04_amd64/usr/lib/beutl
          chmod +x Beutl
          chmod +x Beutl.ExceptionHandler
          chmod +x Beutl.PackageTools
          chmod +x Beutl.WaitingDialog

      - name: Symbolic Link
        run: |
          cd packages/ubuntu22.04_amd64
          mkdir usr/bin
          ln -s usr/lib/beutl/Beutl usr/bin/beutl
          ln -s usr/lib/beutl/Beutl.PackageTools usr/bin/beutl.pkg

      - name: Set version
        run: |
           cd packages/ubuntu22.04_amd64/DEBIAN
           echo "Version: ${{needs.determine-version.outputs.simpleVer}}-${{needs.determine-version.outputs.revision}}ubuntu22.04" >> control

      - name: Build package
        run: |
          cd packages
          fakeroot dpkg-deb --build ubuntu22.04_amd64 .

      - name: Save package
        uses: actions/upload-artifact@v3
        with:
          name: beutl-setup
          path: ./packages/beutl_${{needs.determine-version.outputs.simpleVer}}-${{needs.determine-version.outputs.revision}}ubuntu22.04_amd64.deb

  build-nuget:
    needs: [determine-version]
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Restore
        run: ./build.cmd Restore
  
      - name: Build & Pack
        run: dotnet pack --no-restore -c Release --output ../../artifacts
        working-directory: ./packages/Beutl.Sdk

      - name: Save
        uses: actions/upload-artifact@v3
        with:
          name: Beutl.Sdk.${{needs.determine-version.outputs.semVer}}
          path: ./artifacts/Beutl.Sdk.${{needs.determine-version.outputs.semVer}}.nupkg

  create-release:
    needs: [build-executable, build-nuget]
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - uses: ncipollo/release-action@v1
        id: create_release
        with:
          artifacts: "artifacts/**/*.zip,artifacts/**/*.nupkg,artifacts/**/*.deb,artifacts/beutl-setup.exe"
          draft: true
          makeLatest: true
          generateReleaseNotes: true
