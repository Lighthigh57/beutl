<ResourceDictionary xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Padding="20">
            <!--  Add Controls for Previewer Here  -->
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="HorizontalRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource RadioButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="Root"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <ContentPresenter Name="ContentPresenter"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#Root">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
        </Style>

        <Style Selector="^:pressed /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
        </Style>
        <Style Selector="^:pressed /template/ Border#Root">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
        </Style>

        <Style Selector="^:disabled /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundDisabled}" />
        </Style>
        <Style Selector="^:disabled /template/ Border#Root">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundDisabled}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushDisabled}" />
        </Style>

        <Style Selector="^:checked /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForeground}" />
        </Style>
        <Style Selector="^:checked /template/ Border#Root">
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
        </Style>

        <Style Selector="^:checked:pointerover /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
        </Style>
        <Style Selector="^:checked:pointerover /template/ Border#Root">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
        </Style>

        <Style Selector="^:checked:pressed /template/ ContentPresenter#ContentPresenter">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
        </Style>
        <Style Selector="^:checked:pressed /template/ Border#Root">
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>
