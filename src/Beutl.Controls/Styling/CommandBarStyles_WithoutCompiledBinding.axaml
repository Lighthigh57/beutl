<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="using:FluentAvalonia.UI.Controls">
    <!--  CommandBarにDataContextが設定されていると、例外が発生する。  -->
    <!--  https://github.com/amwx/FluentAvalonia/blob/master/FluentAvaloniaSamples/Pages/FAControlPages/CommandBarPage.axaml#L18  -->
    <Styles.Resources>
        <x:Double x:Key="AppBarThemeMinHeight">64</x:Double>
        <x:Double x:Key="AppBarThemeCompactHeight">48</x:Double>
        <Thickness x:Key="AppBarEllipsisButtonInnerBorderMargin">2,6,6,6</Thickness>
        <x:Double x:Key="AppBarMoreButtonColumnMinWidth">6</x:Double>
        <Thickness x:Key="CommandBarOverflowPresenterMargin">0,4,0,4</Thickness>
        <x:Double x:Key="AppBarExpandButtonThemeWidth">48</x:Double>
        <!--  doubled b/c it seemed to clip the icon  -->
        <x:Double x:Key="AppBarExpandButtonCircleDiameter">6</x:Double>
        <x:Double x:Key="AppBarThemeMinimalHeight">24</x:Double>

        <!--
            Only ExpandDown is supported, although technically nothing actually "expands"
            **This is a simplified version**
            WinUI also handles this mostly with ClipRects and whatnot, which Avalonia is not
            robust enough to handle, so we simplify that out...that also eliminates some
            headaches for me in trying to make this work :D
        -->

        <ControlTheme x:Key="CBEllipsisButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AppBarButtonBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource AppBarButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="Width" Value="{DynamicResource AppBarExpandButtonThemeWidth}" />
            <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Panel>
                        <ContentPresenter Name="ContentPresenter"
                                          Margin="{StaticResource AppBarEllipsisButtonInnerBorderMargin}"
                                          Padding="0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          CornerRadius="{TemplateBinding CornerRadius}" />
                    </Panel>
                </ControlTemplate>
            </Setter>

            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource AppBarButtonBackgroundPointerOver}" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonForegroundPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AppBarButtonBorderBrushPointerOver}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource AppBarButtonBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonForegroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AppBarButtonBorderBrushPressed}" />
            </Style>
            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource AppBarButtonBackgroundDisabled}" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonForegroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AppBarButtonBorderBrushDisabled}" />
            </Style>
        </ControlTheme>


        <ControlTheme x:Key="{x:Type ui:CommandBar}" TargetType="ui:CommandBar">
            <Setter Property="Background" Value="{DynamicResource CommandBarBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource CommandBarForeground}" />
            <Setter Property="Padding" Value="4,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="ClosedDisplayMode" Value="Compact" />
            <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Panel Name="LayoutRoot">
                        <Border Name="ContentRootBorder"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="True">
                            <Grid Name="ContentRoot"
                                  MinHeight="{DynamicResource AppBarThemeCompactHeight}"
                                  VerticalAlignment="Top">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" MinWidth="{DynamicResource AppBarMoreButtonColumnMinWidth}" />
                                </Grid.ColumnDefinitions>

                                <!--
                                    ColumnDefs are locked in "dynamic overflow" b/c
                                    we can't change ColDefs through Styles
                                -->
                                <Grid ColumnDefinitions="Auto,*">

                                    <ContentControl Name="ContentControl"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Foreground="{TemplateBinding Foreground}" />

                                    <ItemsControl Name="PrimaryItemsControl"
                                                  Grid.Column="1"
                                                  MinHeight="{DynamicResource AppBarThemeCompactHeight}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                </Grid>

                                <Button Name="MoreButton"
                                        Grid.Column="1"
                                        Padding="{DynamicResource CommandBarMoreButtonMargin}"
                                        VerticalAlignment="Top"
                                        Foreground="{TemplateBinding Foreground}"
                                        Theme="{StaticResource CBEllipsisButton}">
                                    <ui:SymbolIcon Name="EllipsisIcon"
                                                   Height="{StaticResource AppBarExpandButtonCircleDiameter}"
                                                   FontSize="24"
                                                   Symbol="More" />
                                </Button>

                                <Border Name="OpenBorder"
                                        Grid.ColumnSpan="2"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="{DynamicResource CommandBarBorderBrushOpen}"
                                        BorderThickness="{DynamicResource CommandBarBorderThicknessOpen}"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                        IsVisible="False" />
                            </Grid>
                        </Border>

                        <Popup Name="OverflowPopup"
                               IsLightDismissEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=!IsSticky}"
                               IsOpen="{TemplateBinding IsOpen, Mode=TwoWay}"
                               PlacementAnchor="BottomRight"
                               PlacementGravity="BottomLeft"
                               PlacementMode="AnchorAndGravity"
                               PlacementTarget="{TemplateBinding}"
                               WindowManagerAddShadowHint="False">
                            <ui:CommandBarOverflowPresenter Name="SecondaryItemsControl" />
                        </Popup>

                    </Panel>
                </ControlTemplate>
            </Setter>

            <Style Selector="^:disabled">
                <Style Selector="^ /template/ Button#MoreButton ui|SymbolIcon">
                    <Setter Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                </Style>
            </Style>


            <Style Selector="^:hidden">
                <Setter Property="IsVisible" Value="False" />

                <Style Selector="^:open">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
            </Style>

            <!--
                Minimal
                This is where things get weird. Apparently somehow the height of the CommandBar is also
                set to AppBarThemeMinimalHeight, but there is no style setter for it, so, it's being set
                in one of the two ways...
                1. In code, but that should be visible in the VisualTree inspector, most likely, unless
                its in MeasureOverride where they're just passing the height of the More Button as the
                desired height??
                2. All the clips and transforms applied also can affect layout of other elements? Don't think
                this is the case though b/c I can't repro that
                
                (1) is probably the most plausible, but wouldn't allow for overriding, so what I'm going to do
                is just tell the CommandBar Height to be AppBarThemeMinimalHeight when minimal style is set and
                return it to NaN when open
                This is probably the #1 control I'm eagerly awaiting becoming open sourced, because so much of
                the templates and how it works are truly a mystery
            -->

            <Style Selector="^:minimal">
                <Setter Property="Height" Value="{DynamicResource AppBarThemeMinimalHeight}" />

                <Style Selector="^ /template/ ContentControl#ContentControl">
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0" />
                </Style>
                <Style Selector="^ /template/ Button#MoreButton">
                    <Setter Property="Padding" Value="14 11 14 0" />
                    <Setter Property="MinHeight" Value="{DynamicResource AppBarThemeMinimalHeight}" />
                    <Setter Property="VerticalAlignment" Value="Top" />
                </Style>
                <Style Selector="^ /template/ ItemsControl#PrimaryItemsControl">
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0" />
                </Style>


                <Style Selector="^:open">
                    <Setter Property="Height" Value="NaN" />

                    <Style Selector="^ /template/ ContentControl#ContentControl">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                    </Style>
                    <Style Selector="^ /template/ Button#MoreButton">
                        <Setter Property="Padding" Value="14 11 14 0" />
                        <Setter Property="MinHeight" Value="{DynamicResource AppBarThemeMinimalHeight}" />
                    </Style>
                    <Style Selector="^ /template/ ItemsControl#PrimaryItemsControl">
                        <Setter Property="IsHitTestVisible" Value="True" />
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                    </Style>
                </Style>
            </Style>

            <!--  Compact (closed is default state)  -->
            <Style Selector="^:compact">
                <Style Selector="^:open /template/ Border#ContentRootBorder">
                    <Setter Property="Background" Value="{DynamicResource CommandBarBackgroundOpen}" />
                    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
                </Style>
                <Style Selector="^:open /template/ Border#OpenBorder">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
            </Style>

            <Style Selector="^:open /template/ Button#MoreButton">
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
        </ControlTheme>
    </Styles.Resources>
</Styles>
