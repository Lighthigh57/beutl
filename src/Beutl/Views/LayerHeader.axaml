<UserControl x:Class="Beutl.Views.LayerHeader"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:FluentIcons.FluentAvalonia"
             xmlns:local="using:Beutl.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:vm="using:Beutl.ViewModels"
             Height="{CompiledBinding Height.Value}"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Top"
             VerticalContentAlignment="Top"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="vm:LayerHeaderViewModel"
             PositionY="{CompiledBinding PosY.Value}"
             mc:Ignorable="d">
    <Grid RowDefinitions="Auto,*">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" MinWidth="100" />
        </Grid.ColumnDefinitions>
        <Grid.Styles>
            <Style Selector="TextBox.custom">
                <Style.Resources>
                    <Thickness x:Key="TextControlBorderThemeThicknessFocused">0</Thickness>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="10,0,6,0" />
                <Setter Property="MinHeight" Value="{DynamicResource LayerHeight}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
        </Grid.Styles>
        <Border x:Name="border"
                CornerRadius="{DynamicResource ControlCornerRadius}"
                Cursor="SizeNorthSouth"
                PointerMoved="Border_PointerMoved"
                PointerPressed="Border_PointerPressed"
                PointerReleased="Border_PointerReleased">
            <Border.Styles>
                <Style Selector="Border:pointerover">
                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                </Style>
            </Border.Styles>
            <icons:SymbolIcon FontSize="14" Symbol="ReOrderDotsVertical" />
        </Border>

        <ToggleButton Grid.Column="1"
                      BorderThickness="0"
                      IsChecked="{CompiledBinding IsEnabled.Value}">
            <ToggleButton.Resources>
                <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />

                <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                <StaticResource x:Key="ToggleButtonBackgroundCheckedPressed" ResourceKey="ControlFillColorTertiaryBrush" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                <StaticResource x:Key="ToggleButtonBackgroundCheckedPointerOver" ResourceKey="ControlFillColorSecondaryBrush" />
            </ToggleButton.Resources>
            <ToggleButton.Styles>
                <Style Selector="ToggleButton">
                    <Setter Property="Content">
                        <Template>
                            <icons:SymbolIcon Symbol="EyeOff" />
                        </Template>
                    </Setter>
                </Style>
                <Style Selector="ToggleButton:checked">
                    <Setter Property="Content">
                        <Template>
                            <icons:SymbolIcon Foreground="{DynamicResource TextFillColorPrimaryBrush}" Symbol="Eye" />
                        </Template>
                    </Setter>
                </Style>
            </ToggleButton.Styles>
        </ToggleButton>

        <ui:ColorPickerButton Grid.Column="2"
                              MinHeight="{DynamicResource LayerHeight}"
                              CustomPaletteColors="{StaticResource PaletteColors}"
                              IsAlphaEnabled="False"
                              UseColorPalette="True"
                              Color="{CompiledBinding Color.Value}">
            <ui:ColorPickerButton.Styles>
                <Style Selector="ui|ColorPickerButton /template/ Button#MainButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
                <Style Selector="ui|ColorPickerButton">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Panel>
                                <Button Name="MainButton"
                                        Padding="0,0,32,0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                    <Border MinWidth="18"
                                            MinHeight="18"
                                            Margin="5"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{TemplateBinding Color, Converter={StaticResource ColorBrushConv}}"
                                            BorderBrush="{DynamicResource ColorPickerButtonOutline}"
                                            BorderThickness="1"
                                            CornerRadius="{TemplateBinding CornerRadius}">
                                        <ui:FAColorPicker Name="ColorPicker" IsVisible="False" />
                                    </Border>
                                </Button>

                                <Viewbox Name="Chevron"
                                         Width="18"
                                         Height="18"
                                         Margin="0,0,8,0"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         IsHitTestVisible="False">
                                    <icons:SymbolIcon Symbol="ChevronDown" />
                                </Viewbox>
                            </Panel>
                        </ControlTemplate>
                    </Setter>
                </Style>
            </ui:ColorPickerButton.Styles>
        </ui:ColorPickerButton>

        <TextBox x:Name="NameTextBox"
                 Grid.Column="3"
                 Classes="custom"
                 InputMethod.IsInputMethodEnabled="True"
                 Text="{Binding Name.Value}" />

        <ItemsControl Grid.Row="1"
                      Grid.ColumnSpan="4"
                      Items="{CompiledBinding Inlines}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:InlineAnimationLayerHeader />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
