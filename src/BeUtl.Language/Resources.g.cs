// <auto-generated />
namespace BeUtl.Language;
#nullable enable
public static class Resources {
    public static class S {
        public static class Common {
            public static string File => "S.Common.File".GetStringResource("File");
            private static IObservable<string>? _FileObservable;
            public static IObservable<string> FileObservable => _FileObservable ??= "S.Common.File".GetStringObservable(global::BeUtl.Language.Resources.S.Common.File);
            public static string Create => "S.Common.Create".GetStringResource("Create");
            private static IObservable<string>? _CreateObservable;
            public static IObservable<string> CreateObservable => _CreateObservable ??= "S.Common.Create".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Create);
            public static string CreateNew => "S.Common.CreateNew".GetStringResource("Create New");
            private static IObservable<string>? _CreateNewObservable;
            public static IObservable<string> CreateNewObservable => _CreateNewObservable ??= "S.Common.CreateNew".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CreateNew);
            public static string CreateNewProject => "S.Common.CreateNewProject".GetStringResource("Create New Project");
            private static IObservable<string>? _CreateNewProjectObservable;
            public static IObservable<string> CreateNewProjectObservable => _CreateNewProjectObservable ??= "S.Common.CreateNewProject".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CreateNewProject);
            public static string CreateNewScene => "S.Common.CreateNewScene".GetStringResource("Create New Scene");
            private static IObservable<string>? _CreateNewSceneObservable;
            public static IObservable<string> CreateNewSceneObservable => _CreateNewSceneObservable ??= "S.Common.CreateNewScene".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CreateNewScene);
            public static string Project => "S.Common.Project".GetStringResource("Project");
            private static IObservable<string>? _ProjectObservable;
            public static IObservable<string> ProjectObservable => _ProjectObservable ??= "S.Common.Project".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Project);
            public static string Scene => "S.Common.Scene".GetStringResource("Scene");
            private static IObservable<string>? _SceneObservable;
            public static IObservable<string> SceneObservable => _SceneObservable ??= "S.Common.Scene".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Scene);
            public static string Open => "S.Common.Open".GetStringResource("Open");
            private static IObservable<string>? _OpenObservable;
            public static IObservable<string> OpenObservable => _OpenObservable ??= "S.Common.Open".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Open);
            public static string Close => "S.Common.Close".GetStringResource("Close");
            private static IObservable<string>? _CloseObservable;
            public static IObservable<string> CloseObservable => _CloseObservable ??= "S.Common.Close".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Close);
            public static string CloseProject => "S.Common.CloseProject".GetStringResource("Close Project");
            private static IObservable<string>? _CloseProjectObservable;
            public static IObservable<string> CloseProjectObservable => _CloseProjectObservable ??= "S.Common.CloseProject".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CloseProject);
            public static string Save => "S.Common.Save".GetStringResource("Save");
            private static IObservable<string>? _SaveObservable;
            public static IObservable<string> SaveObservable => _SaveObservable ??= "S.Common.Save".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Save);
            public static string SaveOverWrite => "S.Common.SaveOverWrite".GetStringResource("Save");
            private static IObservable<string>? _SaveOverWriteObservable;
            public static IObservable<string> SaveOverWriteObservable => _SaveOverWriteObservable ??= "S.Common.SaveOverWrite".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SaveOverWrite);
            public static string SaveAll => "S.Common.SaveAll".GetStringResource("Save All");
            private static IObservable<string>? _SaveAllObservable;
            public static IObservable<string> SaveAllObservable => _SaveAllObservable ??= "S.Common.SaveAll".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SaveAll);
            public static string SaveAs => "S.Common.SaveAs".GetStringResource("Save As");
            private static IObservable<string>? _SaveAsObservable;
            public static IObservable<string> SaveAsObservable => _SaveAsObservable ??= "S.Common.SaveAs".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SaveAs);
            public static string Exit => "S.Common.Exit".GetStringResource("Exit");
            private static IObservable<string>? _ExitObservable;
            public static IObservable<string> ExitObservable => _ExitObservable ??= "S.Common.Exit".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Exit);
            public static string Edit => "S.Common.Edit".GetStringResource("Edit");
            private static IObservable<string>? _EditObservable;
            public static IObservable<string> EditObservable => _EditObservable ??= "S.Common.Edit".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Edit);
            public static string Undo => "S.Common.Undo".GetStringResource("Undo");
            private static IObservable<string>? _UndoObservable;
            public static IObservable<string> UndoObservable => _UndoObservable ??= "S.Common.Undo".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Undo);
            public static string Redo => "S.Common.Redo".GetStringResource("Redo");
            private static IObservable<string>? _RedoObservable;
            public static IObservable<string> RedoObservable => _RedoObservable ??= "S.Common.Redo".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Redo);
            public static string View => "S.Common.View".GetStringResource("View");
            private static IObservable<string>? _ViewObservable;
            public static IObservable<string> ViewObservable => _ViewObservable ??= "S.Common.View".GetStringObservable(global::BeUtl.Language.Resources.S.Common.View);
            public static string Object => "S.Common.Object".GetStringResource("Object");
            private static IObservable<string>? _ObjectObservable;
            public static IObservable<string> ObjectObservable => _ObjectObservable ??= "S.Common.Object".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Object);
            public static string Help => "S.Common.Help".GetStringResource("Help");
            private static IObservable<string>? _HelpObservable;
            public static IObservable<string> HelpObservable => _HelpObservable ??= "S.Common.Help".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Help);
            public static string Extensions => "S.Common.Extensions".GetStringResource("Extensions");
            private static IObservable<string>? _ExtensionsObservable;
            public static IObservable<string> ExtensionsObservable => _ExtensionsObservable ??= "S.Common.Extensions".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Extensions);
            public static string Output => "S.Common.Output".GetStringResource("Output");
            private static IObservable<string>? _OutputObservable;
            public static IObservable<string> OutputObservable => _OutputObservable ??= "S.Common.Output".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Output);
            public static string Settings => "S.Common.Settings".GetStringResource("Settings");
            private static IObservable<string>? _SettingsObservable;
            public static IObservable<string> SettingsObservable => _SettingsObservable ??= "S.Common.Settings".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Settings);
            public static string Properties => "S.Common.Properties".GetStringResource("Properties");
            private static IObservable<string>? _PropertiesObservable;
            public static IObservable<string> PropertiesObservable => _PropertiesObservable ??= "S.Common.Properties".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Properties);
            public static string Easings => "S.Common.Easings".GetStringResource("Easings");
            private static IObservable<string>? _EasingsObservable;
            public static IObservable<string> EasingsObservable => _EasingsObservable ??= "S.Common.Easings".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Easings);
            public static string Explorer => "S.Common.Explorer".GetStringResource("Explorer");
            private static IObservable<string>? _ExplorerObservable;
            public static IObservable<string> ExplorerObservable => _ExplorerObservable ??= "S.Common.Explorer".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Explorer);
            public static string Timeline => "S.Common.Timeline".GetStringResource("Timeline");
            private static IObservable<string>? _TimelineObservable;
            public static IObservable<string> TimelineObservable => _TimelineObservable ??= "S.Common.Timeline".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Timeline);
            public static string SceneFile => "S.Common.SceneFile".GetStringResource("Scene File");
            private static IObservable<string>? _SceneFileObservable;
            public static IObservable<string> SceneFileObservable => _SceneFileObservable ??= "S.Common.SceneFile".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SceneFile);
            public static string Font => "S.Common.Font".GetStringResource("Font");
            private static IObservable<string>? _FontObservable;
            public static IObservable<string> FontObservable => _FontObservable ??= "S.Common.Font".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Font);
            public static string Info => "S.Common.Info".GetStringResource("Info");
            private static IObservable<string>? _InfoObservable;
            public static IObservable<string> InfoObservable => _InfoObservable ??= "S.Common.Info".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Info);
            public static string Add => "S.Common.Add".GetStringResource("Add");
            private static IObservable<string>? _AddObservable;
            public static IObservable<string> AddObservable => _AddObservable ??= "S.Common.Add".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Add);
            public static string Links => "S.Common.Links".GetStringResource("Links");
            private static IObservable<string>? _LinksObservable;
            public static IObservable<string> LinksObservable => _LinksObservable ??= "S.Common.Links".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Links);
            public static string SourceCode => "S.Common.SourceCode".GetStringResource("Source Code");
            private static IObservable<string>? _SourceCodeObservable;
            public static IObservable<string> SourceCodeObservable => _SourceCodeObservable ??= "S.Common.SourceCode".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SourceCode);
            public static string License => "S.Common.License".GetStringResource("License");
            private static IObservable<string>? _LicenseObservable;
            public static IObservable<string> LicenseObservable => _LicenseObservable ??= "S.Common.License".GetStringObservable(global::BeUtl.Language.Resources.S.Common.License);
            public static string ThirdPartyLicenses => "S.Common.ThirdPartyLicenses".GetStringResource("Third Party Licenses");
            private static IObservable<string>? _ThirdPartyLicensesObservable;
            public static IObservable<string> ThirdPartyLicensesObservable => _ThirdPartyLicensesObservable ??= "S.Common.ThirdPartyLicenses".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ThirdPartyLicenses);
            public static string Theme => "S.Common.Theme".GetStringResource("Theme");
            private static IObservable<string>? _ThemeObservable;
            public static IObservable<string> ThemeObservable => _ThemeObservable ??= "S.Common.Theme".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Theme);
            public static string Light => "S.Common.Light".GetStringResource("Light");
            private static IObservable<string>? _LightObservable;
            public static IObservable<string> LightObservable => _LightObservable ??= "S.Common.Light".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Light);
            public static string Dark => "S.Common.Dark".GetStringResource("Dark");
            private static IObservable<string>? _DarkObservable;
            public static IObservable<string> DarkObservable => _DarkObservable ??= "S.Common.Dark".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Dark);
            public static string HighContrast => "S.Common.HighContrast".GetStringResource("HighContrast");
            private static IObservable<string>? _HighContrastObservable;
            public static IObservable<string> HighContrastObservable => _HighContrastObservable ??= "S.Common.HighContrast".GetStringObservable(global::BeUtl.Language.Resources.S.Common.HighContrast);
            public static string FollowSystem => "S.Common.FollowSystem".GetStringResource("Follow the system");
            private static IObservable<string>? _FollowSystemObservable;
            public static IObservable<string> FollowSystemObservable => _FollowSystemObservable ??= "S.Common.FollowSystem".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FollowSystem);
            public static string Search => "S.Common.Search".GetStringResource("Search");
            private static IObservable<string>? _SearchObservable;
            public static IObservable<string> SearchObservable => _SearchObservable ??= "S.Common.Search".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Search);
            public static string Name => "S.Common.Name".GetStringResource("Name");
            private static IObservable<string>? _NameObservable;
            public static IObservable<string> NameObservable => _NameObservable ??= "S.Common.Name".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Name);
            public static string StartTime => "S.Common.StartTime".GetStringResource("Start Time");
            private static IObservable<string>? _StartTimeObservable;
            public static IObservable<string> StartTimeObservable => _StartTimeObservable ??= "S.Common.StartTime".GetStringObservable(global::BeUtl.Language.Resources.S.Common.StartTime);
            public static string DurationTime => "S.Common.DurationTime".GetStringResource("Duration Time");
            private static IObservable<string>? _DurationTimeObservable;
            public static IObservable<string> DurationTimeObservable => _DurationTimeObservable ??= "S.Common.DurationTime".GetStringObservable(global::BeUtl.Language.Resources.S.Common.DurationTime);
            public static string Cut => "S.Common.Cut".GetStringResource("Cut");
            private static IObservable<string>? _CutObservable;
            public static IObservable<string> CutObservable => _CutObservable ??= "S.Common.Cut".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Cut);
            public static string Copy => "S.Common.Copy".GetStringResource("Copy");
            private static IObservable<string>? _CopyObservable;
            public static IObservable<string> CopyObservable => _CopyObservable ??= "S.Common.Copy".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Copy);
            public static string Paste => "S.Common.Paste".GetStringResource("Paste");
            private static IObservable<string>? _PasteObservable;
            public static IObservable<string> PasteObservable => _PasteObservable ??= "S.Common.Paste".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Paste);
            public static string Split => "S.Common.Split".GetStringResource("Split");
            private static IObservable<string>? _SplitObservable;
            public static IObservable<string> SplitObservable => _SplitObservable ??= "S.Common.Split".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Split);
            public static string Delete => "S.Common.Delete".GetStringResource("Delete");
            private static IObservable<string>? _DeleteObservable;
            public static IObservable<string> DeleteObservable => _DeleteObservable ??= "S.Common.Delete".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Delete);
            public static string Remove => "S.Common.Remove".GetStringResource("Remove");
            private static IObservable<string>? _RemoveObservable;
            public static IObservable<string> RemoveObservable => _RemoveObservable ??= "S.Common.Remove".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Remove);
            public static string Exclude => "S.Common.Exclude".GetStringResource("Exclude");
            private static IObservable<string>? _ExcludeObservable;
            public static IObservable<string> ExcludeObservable => _ExcludeObservable ??= "S.Common.Exclude".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Exclude);
            public static string Back => "S.Common.Back".GetStringResource("Back");
            private static IObservable<string>? _BackObservable;
            public static IObservable<string> BackObservable => _BackObservable ??= "S.Common.Back".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Back);
            public static string Next => "S.Common.Next".GetStringResource("Next");
            private static IObservable<string>? _NextObservable;
            public static IObservable<string> NextObservable => _NextObservable ??= "S.Common.Next".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Next);
            public static string Color => "S.Common.Color".GetStringResource("Color");
            private static IObservable<string>? _ColorObservable;
            public static IObservable<string> ColorObservable => _ColorObservable ??= "S.Common.Color".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Color);
            public static string Layer => "S.Common.Layer".GetStringResource("Layer");
            private static IObservable<string>? _LayerObservable;
            public static IObservable<string> LayerObservable => _LayerObservable ??= "S.Common.Layer".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Layer);
            public static string AddLayer => "S.Common.AddLayer".GetStringResource("Add Layer");
            private static IObservable<string>? _AddLayerObservable;
            public static IObservable<string> AddLayerObservable => _AddLayerObservable ??= "S.Common.AddLayer".GetStringObservable(global::BeUtl.Language.Resources.S.Common.AddLayer);
            public static string Location => "S.Common.Location".GetStringResource("Location");
            private static IObservable<string>? _LocationObservable;
            public static IObservable<string> LocationObservable => _LocationObservable ??= "S.Common.Location".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Location);
            public static string Size => "S.Common.Size".GetStringResource("Size");
            private static IObservable<string>? _SizeObservable;
            public static IObservable<string> SizeObservable => _SizeObservable ??= "S.Common.Size".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Size);
            public static string FrameRate => "S.Common.FrameRate".GetStringResource("FrameRate");
            private static IObservable<string>? _FrameRateObservable;
            public static IObservable<string> FrameRateObservable => _FrameRateObservable ??= "S.Common.FrameRate".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FrameRate);
            public static string SampleRate => "S.Common.SampleRate".GetStringResource("SampleRate");
            private static IObservable<string>? _SampleRateObservable;
            public static IObservable<string> SampleRateObservable => _SampleRateObservable ??= "S.Common.SampleRate".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SampleRate);
            public static string PickFont => "S.Common.PickFont".GetStringResource("Pick a font");
            private static IObservable<string>? _PickFontObservable;
            public static IObservable<string> PickFontObservable => _PickFontObservable ??= "S.Common.PickFont".GetStringObservable(global::BeUtl.Language.Resources.S.Common.PickFont);
            public static string Done => "S.Common.Done".GetStringResource("Done");
            private static IObservable<string>? _DoneObservable;
            public static IObservable<string> DoneObservable => _DoneObservable ??= "S.Common.Done".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Done);
            public static string SceneSettings => "S.Common.SceneSettings".GetStringResource("Scene settings");
            private static IObservable<string>? _SceneSettingsObservable;
            public static IObservable<string> SceneSettingsObservable => _SceneSettingsObservable ??= "S.Common.SceneSettings".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SceneSettings);
            public static string Apply => "S.Common.Apply".GetStringResource("Apply");
            private static IObservable<string>? _ApplyObservable;
            public static IObservable<string> ApplyObservable => _ApplyObservable ??= "S.Common.Apply".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Apply);
            public static string X => "S.Common.X".GetStringResource("X");
            private static IObservable<string>? _XObservable;
            public static IObservable<string> XObservable => _XObservable ??= "S.Common.X".GetStringObservable(global::BeUtl.Language.Resources.S.Common.X);
            public static string Y => "S.Common.Y".GetStringResource("Y");
            private static IObservable<string>? _YObservable;
            public static IObservable<string> YObservable => _YObservable ??= "S.Common.Y".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Y);
            public static string Z => "S.Common.Z".GetStringResource("Z");
            private static IObservable<string>? _ZObservable;
            public static IObservable<string> ZObservable => _ZObservable ??= "S.Common.Z".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Z);
            public static string W => "S.Common.W".GetStringResource("W");
            private static IObservable<string>? _WObservable;
            public static IObservable<string> WObservable => _WObservable ??= "S.Common.W".GetStringObservable(global::BeUtl.Language.Resources.S.Common.W);
            public static string Width => "S.Common.Width".GetStringResource("Width");
            private static IObservable<string>? _WidthObservable;
            public static IObservable<string> WidthObservable => _WidthObservable ??= "S.Common.Width".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Width);
            public static string Height => "S.Common.Height".GetStringResource("Height");
            private static IObservable<string>? _HeightObservable;
            public static IObservable<string> HeightObservable => _HeightObservable ??= "S.Common.Height".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Height);
            public static string Reset => "S.Common.Reset".GetStringResource("Reset");
            private static IObservable<string>? _ResetObservable;
            public static IObservable<string> ResetObservable => _ResetObservable ??= "S.Common.Reset".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Reset);
            public static string EditAnimation => "S.Common.EditAnimation".GetStringResource("Edit Animation");
            private static IObservable<string>? _EditAnimationObservable;
            public static IObservable<string> EditAnimationObservable => _EditAnimationObservable ??= "S.Common.EditAnimation".GetStringObservable(global::BeUtl.Language.Resources.S.Common.EditAnimation);
            public static string NewFolder => "S.Common.NewFolder".GetStringResource("New Folder");
            private static IObservable<string>? _NewFolderObservable;
            public static IObservable<string> NewFolderObservable => _NewFolderObservable ??= "S.Common.NewFolder".GetStringObservable(global::BeUtl.Language.Resources.S.Common.NewFolder);
            public static string Left => "S.Common.Left".GetStringResource("Left");
            private static IObservable<string>? _LeftObservable;
            public static IObservable<string> LeftObservable => _LeftObservable ??= "S.Common.Left".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Left);
            public static string Right => "S.Common.Right".GetStringResource("Right");
            private static IObservable<string>? _RightObservable;
            public static IObservable<string> RightObservable => _RightObservable ??= "S.Common.Right".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Right);
            public static string Top => "S.Common.Top".GetStringResource("Top");
            private static IObservable<string>? _TopObservable;
            public static IObservable<string> TopObservable => _TopObservable ??= "S.Common.Top".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Top);
            public static string Bottom => "S.Common.Bottom".GetStringResource("Bottom");
            private static IObservable<string>? _BottomObservable;
            public static IObservable<string> BottomObservable => _BottomObservable ??= "S.Common.Bottom".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Bottom);
            public static string Center => "S.Common.Center".GetStringResource("Center");
            private static IObservable<string>? _CenterObservable;
            public static IObservable<string> CenterObservable => _CenterObservable ??= "S.Common.Center".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Center);
            public static string FontFamily => "S.Common.FontFamily".GetStringResource("Font family");
            private static IObservable<string>? _FontFamilyObservable;
            public static IObservable<string> FontFamilyObservable => _FontFamilyObservable ??= "S.Common.FontFamily".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FontFamily);
            public static string FontStyle => "S.Common.FontStyle".GetStringResource("Font style");
            private static IObservable<string>? _FontStyleObservable;
            public static IObservable<string> FontStyleObservable => _FontStyleObservable ??= "S.Common.FontStyle".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FontStyle);
            public static string FontWeight => "S.Common.FontWeight".GetStringResource("Font weight");
            private static IObservable<string>? _FontWeightObservable;
            public static IObservable<string> FontWeightObservable => _FontWeightObservable ??= "S.Common.FontWeight".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FontWeight);
            public static string CharactorSpacing => "S.Common.CharactorSpacing".GetStringResource("Charactor Spacing");
            private static IObservable<string>? _CharactorSpacingObservable;
            public static IObservable<string> CharactorSpacingObservable => _CharactorSpacingObservable ??= "S.Common.CharactorSpacing".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CharactorSpacing);
            public static string Margin => "S.Common.Margin".GetStringResource("Margin");
            private static IObservable<string>? _MarginObservable;
            public static IObservable<string> MarginObservable => _MarginObservable ??= "S.Common.Margin".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Margin);
            public static string CanvasAlignmentX => "S.Common.CanvasAlignmentX".GetStringResource("Canvas alignment x");
            private static IObservable<string>? _CanvasAlignmentXObservable;
            public static IObservable<string> CanvasAlignmentXObservable => _CanvasAlignmentXObservable ??= "S.Common.CanvasAlignmentX".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CanvasAlignmentX);
            public static string CanvasAlignmentY => "S.Common.CanvasAlignmentY".GetStringResource("Canvas alignment y");
            private static IObservable<string>? _CanvasAlignmentYObservable;
            public static IObservable<string> CanvasAlignmentYObservable => _CanvasAlignmentYObservable ??= "S.Common.CanvasAlignmentY".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CanvasAlignmentY);
            public static string AlignmentX => "S.Common.AlignmentX".GetStringResource("Alignment X");
            private static IObservable<string>? _AlignmentXObservable;
            public static IObservable<string> AlignmentXObservable => _AlignmentXObservable ??= "S.Common.AlignmentX".GetStringObservable(global::BeUtl.Language.Resources.S.Common.AlignmentX);
            public static string AlignmentY => "S.Common.AlignmentY".GetStringResource("Alignment Y");
            private static IObservable<string>? _AlignmentYObservable;
            public static IObservable<string> AlignmentYObservable => _AlignmentYObservable ??= "S.Common.AlignmentY".GetStringObservable(global::BeUtl.Language.Resources.S.Common.AlignmentY);
            public static string Position => "S.Common.Position".GetStringResource("Position");
            private static IObservable<string>? _PositionObservable;
            public static IObservable<string> PositionObservable => _PositionObservable ??= "S.Common.Position".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Position);
            public static string Sigma => "S.Common.Sigma".GetStringResource("Sigma");
            private static IObservable<string>? _SigmaObservable;
            public static IObservable<string> SigmaObservable => _SigmaObservable ??= "S.Common.Sigma".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Sigma);
            public static string ShadowOnly => "S.Common.ShadowOnly".GetStringResource("Shadow Only");
            private static IObservable<string>? _ShadowOnlyObservable;
            public static IObservable<string> ShadowOnlyObservable => _ShadowOnlyObservable ??= "S.Common.ShadowOnly".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ShadowOnly);
            public static string Opacity => "S.Common.Opacity".GetStringResource("Opacity");
            private static IObservable<string>? _OpacityObservable;
            public static IObservable<string> OpacityObservable => _OpacityObservable ??= "S.Common.Opacity".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Opacity);
            public static string StartIndex => "S.Common.StartIndex".GetStringResource("Start Index");
            private static IObservable<string>? _StartIndexObservable;
            public static IObservable<string> StartIndexObservable => _StartIndexObservable ??= "S.Common.StartIndex".GetStringObservable(global::BeUtl.Language.Resources.S.Common.StartIndex);
            public static string Count => "S.Common.Count".GetStringResource("Count");
            private static IObservable<string>? _CountObservable;
            public static IObservable<string> CountObservable => _CountObservable ??= "S.Common.Count".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Count);
            public static string CornerRadius => "S.Common.CornerRadius".GetStringResource("Corner Radius");
            private static IObservable<string>? _CornerRadiusObservable;
            public static IObservable<string> CornerRadiusObservable => _CornerRadiusObservable ??= "S.Common.CornerRadius".GetStringObservable(global::BeUtl.Language.Resources.S.Common.CornerRadius);
            public static string OK => "S.Common.OK".GetStringResource("OK");
            private static IObservable<string>? _OKObservable;
            public static IObservable<string> OKObservable => _OKObservable ??= "S.Common.OK".GetStringObservable(global::BeUtl.Language.Resources.S.Common.OK);
            public static string Cancel => "S.Common.Cancel".GetStringResource("Cancel");
            private static IObservable<string>? _CancelObservable;
            public static IObservable<string> CancelObservable => _CancelObservable ??= "S.Common.Cancel".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Cancel);
            public static string Rename => "S.Common.Rename".GetStringResource("Rename");
            private static IObservable<string>? _RenameObservable;
            public static IObservable<string> RenameObservable => _RenameObservable ??= "S.Common.Rename".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Rename);
            public static string ProjectFile => "S.Common.ProjectFile".GetStringResource("Project File");
            private static IObservable<string>? _ProjectFileObservable;
            public static IObservable<string> ProjectFileObservable => _ProjectFileObservable ??= "S.Common.ProjectFile".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ProjectFile);
            public static string StrokeWidth => "S.Common.StrokeWidth".GetStringResource("Stroke Width");
            private static IObservable<string>? _StrokeWidthObservable;
            public static IObservable<string> StrokeWidthObservable => _StrokeWidthObservable ??= "S.Common.StrokeWidth".GetStringObservable(global::BeUtl.Language.Resources.S.Common.StrokeWidth);
            public static string Language => "S.Common.Language".GetStringResource("Language");
            private static IObservable<string>? _LanguageObservable;
            public static IObservable<string> LanguageObservable => _LanguageObservable ??= "S.Common.Language".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Language);
            public static string RecentFiles => "S.Common.RecentFiles".GetStringResource("Recent Files");
            private static IObservable<string>? _RecentFilesObservable;
            public static IObservable<string> RecentFilesObservable => _RecentFilesObservable ??= "S.Common.RecentFiles".GetStringObservable(global::BeUtl.Language.Resources.S.Common.RecentFiles);
            public static string RecentProjects => "S.Common.RecentProjects".GetStringResource("Recent Projects");
            private static IObservable<string>? _RecentProjectsObservable;
            public static IObservable<string> RecentProjectsObservable => _RecentProjectsObservable ??= "S.Common.RecentProjects".GetStringObservable(global::BeUtl.Language.Resources.S.Common.RecentProjects);
            public static string ScaleX => "S.Common.ScaleX".GetStringResource("Scale X");
            private static IObservable<string>? _ScaleXObservable;
            public static IObservable<string> ScaleXObservable => _ScaleXObservable ??= "S.Common.ScaleX".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ScaleX);
            public static string ScaleY => "S.Common.ScaleY".GetStringResource("Scale Y");
            private static IObservable<string>? _ScaleYObservable;
            public static IObservable<string> ScaleYObservable => _ScaleYObservable ??= "S.Common.ScaleY".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ScaleY);
            public static string SkewX => "S.Common.SkewX".GetStringResource("Skew X");
            private static IObservable<string>? _SkewXObservable;
            public static IObservable<string> SkewXObservable => _SkewXObservable ??= "S.Common.SkewX".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SkewX);
            public static string SkewY => "S.Common.SkewY".GetStringResource("Skew Y");
            private static IObservable<string>? _SkewYObservable;
            public static IObservable<string> SkewYObservable => _SkewYObservable ??= "S.Common.SkewY".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SkewY);
            public static string Yes => "S.Common.Yes".GetStringResource("Yes");
            private static IObservable<string>? _YesObservable;
            public static IObservable<string> YesObservable => _YesObservable ??= "S.Common.Yes".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Yes);
            public static string No => "S.Common.No".GetStringResource("No");
            private static IObservable<string>? _NoObservable;
            public static IObservable<string> NoObservable => _NoObservable ??= "S.Common.No".GetStringObservable(global::BeUtl.Language.Resources.S.Common.No);
            public static string Account => "S.Common.Account".GetStringResource("Account");
            private static IObservable<string>? _AccountObservable;
            public static IObservable<string> AccountObservable => _AccountObservable ??= "S.Common.Account".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Account);
            public static string Password => "S.Common.Password".GetStringResource("Password");
            private static IObservable<string>? _PasswordObservable;
            public static IObservable<string> PasswordObservable => _PasswordObservable ??= "S.Common.Password".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Password);
            public static string Backup => "S.Common.Backup".GetStringResource("Backup");
            private static IObservable<string>? _BackupObservable;
            public static IObservable<string> BackupObservable => _BackupObservable ??= "S.Common.Backup".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Backup);
            public static string KernelSize => "S.Common.KernelSize".GetStringResource("Kernel Size");
            private static IObservable<string>? _KernelSizeObservable;
            public static IObservable<string> KernelSizeObservable => _KernelSizeObservable ??= "S.Common.KernelSize".GetStringObservable(global::BeUtl.Language.Resources.S.Common.KernelSize);
            public static string FixImageSize => "S.Common.FixImageSize".GetStringResource("Fix Image Size");
            private static IObservable<string>? _FixImageSizeObservable;
            public static IObservable<string> FixImageSizeObservable => _FixImageSizeObservable ??= "S.Common.FixImageSize".GetStringObservable(global::BeUtl.Language.Resources.S.Common.FixImageSize);
            public static string Offset => "S.Common.Offset".GetStringResource("Offset");
            private static IObservable<string>? _OffsetObservable;
            public static IObservable<string> OffsetObservable => _OffsetObservable ??= "S.Common.Offset".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Offset);
            public static string Thickness => "S.Common.Thickness".GetStringResource("Thickness");
            private static IObservable<string>? _ThicknessObservable;
            public static IObservable<string> ThicknessObservable => _ThicknessObservable ??= "S.Common.Thickness".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Thickness);
            public static string MaskType => "S.Common.MaskType".GetStringResource("Mask Type");
            private static IObservable<string>? _MaskTypeObservable;
            public static IObservable<string> MaskTypeObservable => _MaskTypeObservable ??= "S.Common.MaskType".GetStringObservable(global::BeUtl.Language.Resources.S.Common.MaskType);
            public static string BorderStyle => "S.Common.BorderStyle".GetStringResource("Border Style");
            private static IObservable<string>? _BorderStyleObservable;
            public static IObservable<string> BorderStyleObservable => _BorderStyleObservable ??= "S.Common.BorderStyle".GetStringObservable(global::BeUtl.Language.Resources.S.Common.BorderStyle);
            public static string Style => "S.Common.Style".GetStringResource("Style");
            private static IObservable<string>? _StyleObservable;
            public static IObservable<string> StyleObservable => _StyleObservable ??= "S.Common.Style".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Style);
            public static string StreamOperators => "S.Common.StreamOperators".GetStringResource("Stream Operators");
            private static IObservable<string>? _StreamOperatorsObservable;
            public static IObservable<string> StreamOperatorsObservable => _StreamOperatorsObservable ??= "S.Common.StreamOperators".GetStringObservable(global::BeUtl.Language.Resources.S.Common.StreamOperators);
            public static string Animation => "S.Common.Animation".GetStringResource("Animation");
            private static IObservable<string>? _AnimationObservable;
            public static IObservable<string> AnimationObservable => _AnimationObservable ??= "S.Common.Animation".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Animation);
            public static string Alignment => "S.Common.Alignment".GetStringResource("Alignment");
            private static IObservable<string>? _AlignmentObservable;
            public static IObservable<string> AlignmentObservable => _AlignmentObservable ??= "S.Common.Alignment".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Alignment);
            public static string Blend => "S.Common.Blend".GetStringResource("Blend");
            private static IObservable<string>? _BlendObservable;
            public static IObservable<string> BlendObservable => _BlendObservable ??= "S.Common.Blend".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Blend);
            public static string Foreground => "S.Common.Foreground".GetStringResource("Foreground");
            private static IObservable<string>? _ForegroundObservable;
            public static IObservable<string> ForegroundObservable => _ForegroundObservable ??= "S.Common.Foreground".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Foreground);
            public static string OpacityMask => "S.Common.OpacityMask".GetStringResource("Opacity Mask");
            private static IObservable<string>? _OpacityMaskObservable;
            public static IObservable<string> OpacityMaskObservable => _OpacityMaskObservable ??= "S.Common.OpacityMask".GetStringObservable(global::BeUtl.Language.Resources.S.Common.OpacityMask);
            public static string Brush => "S.Common.Brush".GetStringResource("Brush");
            private static IObservable<string>? _BrushObservable;
            public static IObservable<string> BrushObservable => _BrushObservable ??= "S.Common.Brush".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Brush);
            public static string LinearGradientBrush => "S.Common.LinearGradientBrush".GetStringResource("Linear Gradient Brush");
            private static IObservable<string>? _LinearGradientBrushObservable;
            public static IObservable<string> LinearGradientBrushObservable => _LinearGradientBrushObservable ??= "S.Common.LinearGradientBrush".GetStringObservable(global::BeUtl.Language.Resources.S.Common.LinearGradientBrush);
            public static string Configure => "S.Common.Configure".GetStringResource("Configure");
            private static IObservable<string>? _ConfigureObservable;
            public static IObservable<string> ConfigureObservable => _ConfigureObservable ??= "S.Common.Configure".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Configure);
            public static string ImageFilter => "S.Common.ImageFilter".GetStringResource("Image Filter");
            private static IObservable<string>? _ImageFilterObservable;
            public static IObservable<string> ImageFilterObservable => _ImageFilterObservable ??= "S.Common.ImageFilter".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ImageFilter);
            public static string Blur => "S.Common.Blur".GetStringResource("Blur");
            private static IObservable<string>? _BlurObservable;
            public static IObservable<string> BlurObservable => _BlurObservable ??= "S.Common.Blur".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Blur);
            public static string DropShadow => "S.Common.DropShadow".GetStringResource("Drop Shadow");
            private static IObservable<string>? _DropShadowObservable;
            public static IObservable<string> DropShadowObservable => _DropShadowObservable ??= "S.Common.DropShadow".GetStringObservable(global::BeUtl.Language.Resources.S.Common.DropShadow);
            public static string BitmapEffect => "S.Common.BitmapEffect".GetStringResource("Bitmap Effect");
            private static IObservable<string>? _BitmapEffectObservable;
            public static IObservable<string> BitmapEffectObservable => _BitmapEffectObservable ??= "S.Common.BitmapEffect".GetStringObservable(global::BeUtl.Language.Resources.S.Common.BitmapEffect);
            public static string InnerShadow => "S.Common.InnerShadow".GetStringResource("Inner Shadow");
            private static IObservable<string>? _InnerShadowObservable;
            public static IObservable<string> InnerShadowObservable => _InnerShadowObservable ??= "S.Common.InnerShadow".GetStringObservable(global::BeUtl.Language.Resources.S.Common.InnerShadow);
            public static string Border => "S.Common.Border".GetStringResource("Border");
            private static IObservable<string>? _BorderObservable;
            public static IObservable<string> BorderObservable => _BorderObservable ??= "S.Common.Border".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Border);
            public static string Transform => "S.Common.Transform".GetStringResource("Transform");
            private static IObservable<string>? _TransformObservable;
            public static IObservable<string> TransformObservable => _TransformObservable ??= "S.Common.Transform".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Transform);
            public static string Rotation => "S.Common.Rotation".GetStringResource("Rotation");
            private static IObservable<string>? _RotationObservable;
            public static IObservable<string> RotationObservable => _RotationObservable ??= "S.Common.Rotation".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Rotation);
            public static string Rotation3D => "S.Common.Rotation3D".GetStringResource("Rotation 3D");
            private static IObservable<string>? _Rotation3DObservable;
            public static IObservable<string> Rotation3DObservable => _Rotation3DObservable ??= "S.Common.Rotation3D".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Rotation3D);
            public static string Scale => "S.Common.Scale".GetStringResource("Scale");
            private static IObservable<string>? _ScaleObservable;
            public static IObservable<string> ScaleObservable => _ScaleObservable ??= "S.Common.Scale".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Scale);
            public static string Skew => "S.Common.Skew".GetStringResource("Skew");
            private static IObservable<string>? _SkewObservable;
            public static IObservable<string> SkewObservable => _SkewObservable ??= "S.Common.Skew".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Skew);
            public static string Translate => "S.Common.Translate".GetStringResource("Translate");
            private static IObservable<string>? _TranslateObservable;
            public static IObservable<string> TranslateObservable => _TranslateObservable ??= "S.Common.Translate".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Translate);
            public static string Source => "S.Common.Source".GetStringResource("Source");
            private static IObservable<string>? _SourceObservable;
            public static IObservable<string> SourceObservable => _SourceObservable ??= "S.Common.Source".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Source);
            public static string Ellipse => "S.Common.Ellipse".GetStringResource("Ellipse");
            private static IObservable<string>? _EllipseObservable;
            public static IObservable<string> EllipseObservable => _EllipseObservable ??= "S.Common.Ellipse".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Ellipse);
            public static string Rect => "S.Common.Rect".GetStringResource("Rectangle");
            private static IObservable<string>? _RectObservable;
            public static IObservable<string> RectObservable => _RectObservable ??= "S.Common.Rect".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Rect);
            public static string RoundedRect => "S.Common.RoundedRect".GetStringResource("Rounded Rectangle");
            private static IObservable<string>? _RoundedRectObservable;
            public static IObservable<string> RoundedRectObservable => _RoundedRectObservable ??= "S.Common.RoundedRect".GetStringObservable(global::BeUtl.Language.Resources.S.Common.RoundedRect);
            public static string Text => "S.Common.Text".GetStringResource("Text");
            private static IObservable<string>? _TextObservable;
            public static IObservable<string> TextObservable => _TextObservable ??= "S.Common.Text".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Text);
            public static string ImageFile => "S.Common.ImageFile".GetStringResource("Image File");
            private static IObservable<string>? _ImageFileObservable;
            public static IObservable<string> ImageFileObservable => _ImageFileObservable ??= "S.Common.ImageFile".GetStringObservable(global::BeUtl.Language.Resources.S.Common.ImageFile);
            public static string TransformOrigin => "S.Common.TransformOrigin".GetStringResource("Transform Origin");
            private static IObservable<string>? _TransformOriginObservable;
            public static IObservable<string> TransformOriginObservable => _TransformOriginObservable ??= "S.Common.TransformOrigin".GetStringObservable(global::BeUtl.Language.Resources.S.Common.TransformOrigin);
            public static string BlendMode => "S.Common.BlendMode".GetStringResource("Blend Mode");
            private static IObservable<string>? _BlendModeObservable;
            public static IObservable<string> BlendModeObservable => _BlendModeObservable ??= "S.Common.BlendMode".GetStringObservable(global::BeUtl.Language.Resources.S.Common.BlendMode);
            public static string SourceFile => "S.Common.SourceFile".GetStringResource("Source File");
            private static IObservable<string>? _SourceFileObservable;
            public static IObservable<string> SourceFileObservable => _SourceFileObservable ??= "S.Common.SourceFile".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SourceFile);
            public static string Angle => "S.Common.Angle".GetStringResource("Angle");
            private static IObservable<string>? _AngleObservable;
            public static IObservable<string> AngleObservable => _AngleObservable ??= "S.Common.Angle".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Angle);
            public static string SpreadMethod => "S.Common.SpreadMethod".GetStringResource("Spread Method");
            private static IObservable<string>? _SpreadMethodObservable;
            public static IObservable<string> SpreadMethodObservable => _SpreadMethodObservable ??= "S.Common.SpreadMethod".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SpreadMethod);
            public static string GradientStops => "S.Common.GradientStops".GetStringResource("Stops");
            private static IObservable<string>? _GradientStopsObservable;
            public static IObservable<string> GradientStopsObservable => _GradientStopsObservable ??= "S.Common.GradientStops".GetStringObservable(global::BeUtl.Language.Resources.S.Common.GradientStops);
            public static string StartPoint => "S.Common.StartPoint".GetStringResource("Start Point");
            private static IObservable<string>? _StartPointObservable;
            public static IObservable<string> StartPointObservable => _StartPointObservable ??= "S.Common.StartPoint".GetStringObservable(global::BeUtl.Language.Resources.S.Common.StartPoint);
            public static string EndPoint => "S.Common.EndPoint".GetStringResource("End Point");
            private static IObservable<string>? _EndPointObservable;
            public static IObservable<string> EndPointObservable => _EndPointObservable ??= "S.Common.EndPoint".GetStringObservable(global::BeUtl.Language.Resources.S.Common.EndPoint);
            public static string GradientOrigin => "S.Common.GradientOrigin".GetStringResource("Gradient Origin");
            private static IObservable<string>? _GradientOriginObservable;
            public static IObservable<string> GradientOriginObservable => _GradientOriginObservable ??= "S.Common.GradientOrigin".GetStringObservable(global::BeUtl.Language.Resources.S.Common.GradientOrigin);
            public static string Radius => "S.Common.Radius".GetStringResource("Radius");
            private static IObservable<string>? _RadiusObservable;
            public static IObservable<string> RadiusObservable => _RadiusObservable ??= "S.Common.Radius".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Radius);
            public static string DestinationRect => "S.Common.DestinationRect".GetStringResource("Destination Rectangle");
            private static IObservable<string>? _DestinationRectObservable;
            public static IObservable<string> DestinationRectObservable => _DestinationRectObservable ??= "S.Common.DestinationRect".GetStringObservable(global::BeUtl.Language.Resources.S.Common.DestinationRect);
            public static string SourceRect => "S.Common.SourceRect".GetStringResource("Source Rectangle");
            private static IObservable<string>? _SourceRectObservable;
            public static IObservable<string> SourceRectObservable => _SourceRectObservable ??= "S.Common.SourceRect".GetStringObservable(global::BeUtl.Language.Resources.S.Common.SourceRect);
            public static string Stretch => "S.Common.Stretch".GetStringResource("Stretch");
            private static IObservable<string>? _StretchObservable;
            public static IObservable<string> StretchObservable => _StretchObservable ??= "S.Common.Stretch".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Stretch);
            public static string TileMode => "S.Common.TileMode".GetStringResource("Tile Mode");
            private static IObservable<string>? _TileModeObservable;
            public static IObservable<string> TileModeObservable => _TileModeObservable ??= "S.Common.TileMode".GetStringObservable(global::BeUtl.Language.Resources.S.Common.TileMode);
            public static string BitmapInterpolationMode => "S.Common.BitmapInterpolationMode".GetStringResource("Bitmap Interpolation Mode");
            private static IObservable<string>? _BitmapInterpolationModeObservable;
            public static IObservable<string> BitmapInterpolationModeObservable => _BitmapInterpolationModeObservable ??= "S.Common.BitmapInterpolationMode".GetStringObservable(global::BeUtl.Language.Resources.S.Common.BitmapInterpolationMode);
            public static string Property => "S.Common.Property".GetStringResource("Property");
            private static IObservable<string>? _PropertyObservable;
            public static IObservable<string> PropertyObservable => _PropertyObservable ??= "S.Common.Property".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Property);
            public static string Easing => "S.Common.Easing".GetStringResource("Easing");
            private static IObservable<string>? _EasingObservable;
            public static IObservable<string> EasingObservable => _EasingObservable ??= "S.Common.Easing".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Easing);
            public static string TargetType => "S.Common.TargetType".GetStringResource("Target Type");
            private static IObservable<string>? _TargetTypeObservable;
            public static IObservable<string> TargetTypeObservable => _TargetTypeObservable ??= "S.Common.TargetType".GetStringObservable(global::BeUtl.Language.Resources.S.Common.TargetType);
            public static string AddSetter => "S.Common.AddSetter".GetStringResource("Add a setter");
            private static IObservable<string>? _AddSetterObservable;
            public static IObservable<string> AddSetterObservable => _AddSetterObservable ??= "S.Common.AddSetter".GetStringObservable(global::BeUtl.Language.Resources.S.Common.AddSetter);
            public static string RemoveUnavailableSetters => "S.Common.RemoveUnavailableSetters".GetStringResource("Remove unavailable setters?");
            private static IObservable<string>? _RemoveUnavailableSettersObservable;
            public static IObservable<string> RemoveUnavailableSettersObservable => _RemoveUnavailableSettersObservable ??= "S.Common.RemoveUnavailableSetters".GetStringObservable(global::BeUtl.Language.Resources.S.Common.RemoveUnavailableSetters);
            public static string Editors => "S.Common.Editors".GetStringResource("Editors");
            private static IObservable<string>? _EditorsObservable;
            public static IObservable<string> EditorsObservable => _EditorsObservable ??= "S.Common.Editors".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Editors);
            public static string Tools => "S.Common.Tools".GetStringResource("Tools");
            private static IObservable<string>? _ToolsObservable;
            public static IObservable<string> ToolsObservable => _ToolsObservable ??= "S.Common.Tools".GetStringObservable(global::BeUtl.Language.Resources.S.Common.Tools);
            public static string AddToCurrentProject => "S.Common.AddToCurrentProject".GetStringResource("Add to current project");
            private static IObservable<string>? _AddToCurrentProjectObservable;
            public static IObservable<string> AddToCurrentProjectObservable => _AddToCurrentProjectObservable ??= "S.Common.AddToCurrentProject".GetStringObservable(global::BeUtl.Language.Resources.S.Common.AddToCurrentProject);
        }
        public static class Message {
            public static string ItemsSaved => "S.Message.ItemsSaved".GetStringResource("{0} items saved!");
            private static IObservable<string>? _ItemsSavedObservable;
            public static IObservable<string> ItemsSavedObservable => _ItemsSavedObservable ??= "S.Message.ItemsSaved".GetStringObservable(global::BeUtl.Language.Resources.S.Message.ItemsSaved);
            public static string ItemSaved => "S.Message.ItemSaved".GetStringResource("{0} was saved!");
            private static IObservable<string>? _ItemSavedObservable;
            public static IObservable<string> ItemSavedObservable => _ItemSavedObservable ??= "S.Message.ItemSaved".GetStringObservable(global::BeUtl.Language.Resources.S.Message.ItemSaved);
            public static string OperationCouldNotBeExecuted => "S.Message.OperationCouldNotBeExecuted".GetStringResource("The operation could not be executed.");
            private static IObservable<string>? _OperationCouldNotBeExecutedObservable;
            public static IObservable<string> OperationCouldNotBeExecutedObservable => _OperationCouldNotBeExecutedObservable ??= "S.Message.OperationCouldNotBeExecuted".GetStringObservable(global::BeUtl.Language.Resources.S.Message.OperationCouldNotBeExecuted);
            public static string DoYouWantToDeleteThisDirectory => "S.Message.DoYouWantToDeleteThisDirectory".GetStringResource("Do you want to delete this directory?");
            private static IObservable<string>? _DoYouWantToDeleteThisDirectoryObservable;
            public static IObservable<string> DoYouWantToDeleteThisDirectoryObservable => _DoYouWantToDeleteThisDirectoryObservable ??= "S.Message.DoYouWantToDeleteThisDirectory".GetStringObservable(global::BeUtl.Language.Resources.S.Message.DoYouWantToDeleteThisDirectory);
            public static string DoYouWantToDeleteThisFile => "S.Message.DoYouWantToDeleteThisFile".GetStringResource("Do you want to delete this file?");
            private static IObservable<string>? _DoYouWantToDeleteThisFileObservable;
            public static IObservable<string> DoYouWantToDeleteThisFileObservable => _DoYouWantToDeleteThisFileObservable ??= "S.Message.DoYouWantToDeleteThisFile".GetStringObservable(global::BeUtl.Language.Resources.S.Message.DoYouWantToDeleteThisFile);
            public static string DoYouWantToExcludeThisSceneFromProject => "S.Message.DoYouWantToExcludeThisSceneFromProject".GetStringResource("Do you want to exclude this scene from the project?");
            private static IObservable<string>? _DoYouWantToExcludeThisSceneFromProjectObservable;
            public static IObservable<string> DoYouWantToExcludeThisSceneFromProjectObservable => _DoYouWantToExcludeThisSceneFromProjectObservable ??= "S.Message.DoYouWantToExcludeThisSceneFromProject".GetStringObservable(global::BeUtl.Language.Resources.S.Message.DoYouWantToExcludeThisSceneFromProject);
            public static string DoYouWantToExcludeThisItemFromProject => "S.Message.DoYouWantToExcludeThisItemFromProject".GetStringResource("Do you want to exclude this item from the project?");
            private static IObservable<string>? _DoYouWantToExcludeThisItemFromProjectObservable;
            public static IObservable<string> DoYouWantToExcludeThisItemFromProjectObservable => _DoYouWantToExcludeThisItemFromProjectObservable ??= "S.Message.DoYouWantToExcludeThisItemFromProject".GetStringObservable(global::BeUtl.Language.Resources.S.Message.DoYouWantToExcludeThisItemFromProject);
            public static string CouldNotOpenFollowingFileWithExtension => "S.Message.CouldNotOpenFollowingFileWithExtension".GetStringResource("Could not open the following file with '{0}'\n'{1}'\n");
            private static IObservable<string>? _CouldNotOpenFollowingFileWithExtensionObservable;
            public static IObservable<string> CouldNotOpenFollowingFileWithExtensionObservable => _CouldNotOpenFollowingFileWithExtensionObservable ??= "S.Message.CouldNotOpenFollowingFileWithExtension".GetStringObservable(global::BeUtl.Language.Resources.S.Message.CouldNotOpenFollowingFileWithExtension);
            public static string CannotDisplayThisContext => "S.Message.CannotDisplayThisContext".GetStringResource("Cannot display this context.");
            private static IObservable<string>? _CannotDisplayThisContextObservable;
            public static IObservable<string> CannotDisplayThisContextObservable => _CannotDisplayThisContextObservable ??= "S.Message.CannotDisplayThisContext".GetStringObservable(global::BeUtl.Language.Resources.S.Message.CannotDisplayThisContext);
            public static string CouldNotCreateInstanceOfView => "S.Message.CouldNotCreateInstanceOfView".GetStringResource("Could not create an instance of View.");
            private static IObservable<string>? _CouldNotCreateInstanceOfViewObservable;
            public static IObservable<string> CouldNotCreateInstanceOfViewObservable => _CouldNotCreateInstanceOfViewObservable ??= "S.Message.CouldNotCreateInstanceOfView".GetStringObservable(global::BeUtl.Language.Resources.S.Message.CouldNotCreateInstanceOfView);
            public static string ContextNotCreated => "S.Message.ContextNotCreated".GetStringResource("Context not created.");
            private static IObservable<string>? _ContextNotCreatedObservable;
            public static IObservable<string> ContextNotCreatedObservable => _ContextNotCreatedObservable ??= "S.Message.ContextNotCreated".GetStringObservable(global::BeUtl.Language.Resources.S.Message.ContextNotCreated);
            public static string EditorContextHasAlreadyBeenCreated => "S.Message.EditorContextHasAlreadyBeenCreated".GetStringResource("The editor context has already been created.");
            private static IObservable<string>? _EditorContextHasAlreadyBeenCreatedObservable;
            public static IObservable<string> EditorContextHasAlreadyBeenCreatedObservable => _EditorContextHasAlreadyBeenCreatedObservable ??= "S.Message.EditorContextHasAlreadyBeenCreated".GetStringObservable(global::BeUtl.Language.Resources.S.Message.EditorContextHasAlreadyBeenCreated);
            public static string NullWasSpecifiedForEditorContext => "S.Message.NullWasSpecifiedForEditorContext".GetStringResource("Null was specified for the editor context.");
            private static IObservable<string>? _NullWasSpecifiedForEditorContextObservable;
            public static IObservable<string> NullWasSpecifiedForEditorContextObservable => _NullWasSpecifiedForEditorContextObservable ??= "S.Message.NullWasSpecifiedForEditorContext".GetStringObservable(global::BeUtl.Language.Resources.S.Message.NullWasSpecifiedForEditorContext);
            public static string DoYouWantToAddThisItemToCurrentProject => "S.Message.DoYouWantToAddThisItemToCurrentProject".GetStringResource("Do you want to add this item to current project?");
            private static IObservable<string>? _DoYouWantToAddThisItemToCurrentProjectObservable;
            public static IObservable<string> DoYouWantToAddThisItemToCurrentProjectObservable => _DoYouWantToAddThisItemToCurrentProjectObservable ??= "S.Message.DoYouWantToAddThisItemToCurrentProject".GetStringObservable(global::BeUtl.Language.Resources.S.Message.DoYouWantToAddThisItemToCurrentProject);
            public static string RememberThisChoice => "S.Message.RememberThisChoice".GetStringResource("Remember this choice");
            private static IObservable<string>? _RememberThisChoiceObservable;
            public static IObservable<string> RememberThisChoiceObservable => _RememberThisChoiceObservable ??= "S.Message.RememberThisChoice".GetStringObservable(global::BeUtl.Language.Resources.S.Message.RememberThisChoice);
            public static string YourAccountHasBeenDeleted => "S.Message.YourAccountHasBeenDeleted".GetStringResource("Your account has been deleted.");
            private static IObservable<string>? _YourAccountHasBeenDeletedObservable;
            public static IObservable<string> YourAccountHasBeenDeletedObservable => _YourAccountHasBeenDeletedObservable ??= "S.Message.YourAccountHasBeenDeleted".GetStringObservable(global::BeUtl.Language.Resources.S.Message.YourAccountHasBeenDeleted);
            public static string PasswordHasBeenChanged => "S.Message.PasswordHasBeenChanged".GetStringResource("Password has been changed.");
            private static IObservable<string>? _PasswordHasBeenChangedObservable;
            public static IObservable<string> PasswordHasBeenChangedObservable => _PasswordHasBeenChangedObservable ??= "S.Message.PasswordHasBeenChanged".GetStringObservable(global::BeUtl.Language.Resources.S.Message.PasswordHasBeenChanged);
            public static string PleaseEnterString => "S.Message.PleaseEnterString".GetStringResource("Please enter a string.");
            private static IObservable<string>? _PleaseEnterStringObservable;
            public static IObservable<string> PleaseEnterStringObservable => _PleaseEnterStringObservable ??= "S.Message.PleaseEnterString".GetStringObservable(global::BeUtl.Language.Resources.S.Message.PleaseEnterString);
            public static string InvalidString => "S.Message.InvalidString".GetStringResource("Invalid string.");
            private static IObservable<string>? _InvalidStringObservable;
            public static IObservable<string> InvalidStringObservable => _InvalidStringObservable ??= "S.Message.InvalidString".GetStringObservable(global::BeUtl.Language.Resources.S.Message.InvalidString);
            public static string MultipleTypesAreAvailable => "S.Message.MultipleTypesAreAvailable".GetStringResource("Multiple types are available.");
            private static IObservable<string>? _MultipleTypesAreAvailableObservable;
            public static IObservable<string> MultipleTypesAreAvailableObservable => _MultipleTypesAreAvailableObservable ??= "S.Message.MultipleTypesAreAvailable".GetStringObservable(global::BeUtl.Language.Resources.S.Message.MultipleTypesAreAvailable);
            public static string AnimationIsEnabled => "S.Message.AnimationIsEnabled".GetStringResource("Animation is enabled");
            private static IObservable<string>? _AnimationIsEnabledObservable;
            public static IObservable<string> AnimationIsEnabledObservable => _AnimationIsEnabledObservable ??= "S.Message.AnimationIsEnabled".GetStringObservable(global::BeUtl.Language.Resources.S.Message.AnimationIsEnabled);
            public static string CountItems => "S.Message.CountItems".GetStringResource("{0} items");
            private static IObservable<string>? _CountItemsObservable;
            public static IObservable<string> CountItemsObservable => _CountItemsObservable ??= "S.Message.CountItems".GetStringObservable(global::BeUtl.Language.Resources.S.Message.CountItems);
        }
        public static class Operators {
            public static string IndexSource => global::BeUtl.Language.Resources.S.Common.Source;
            public static IObservable<string> IndexSourceObservable => global::BeUtl.Language.Resources.S.Common.SourceObservable;
            public static string IndexConfigure => global::BeUtl.Language.Resources.S.Common.Configure;
            public static IObservable<string> IndexConfigureObservable => global::BeUtl.Language.Resources.S.Common.ConfigureObservable;
            public static class Source {
                public static string Ellipse => global::BeUtl.Language.Resources.S.Common.Ellipse;
                public static IObservable<string> EllipseObservable => global::BeUtl.Language.Resources.S.Common.EllipseObservable;
                public static string Rect => global::BeUtl.Language.Resources.S.Common.Rect;
                public static IObservable<string> RectObservable => global::BeUtl.Language.Resources.S.Common.RectObservable;
                public static string RoundedRect => global::BeUtl.Language.Resources.S.Common.RoundedRect;
                public static IObservable<string> RoundedRectObservable => global::BeUtl.Language.Resources.S.Common.RoundedRectObservable;
                public static string Text => global::BeUtl.Language.Resources.S.Common.Text;
                public static IObservable<string> TextObservable => global::BeUtl.Language.Resources.S.Common.TextObservable;
                public static string ImageFile => global::BeUtl.Language.Resources.S.Common.ImageFile;
                public static IObservable<string> ImageFileObservable => global::BeUtl.Language.Resources.S.Common.ImageFileObservable;
            }
            public static class Configure {
                public static string Alignment => global::BeUtl.Language.Resources.S.Common.Alignment;
                public static IObservable<string> AlignmentObservable => global::BeUtl.Language.Resources.S.Common.AlignmentObservable;
                public static string Blend => global::BeUtl.Language.Resources.S.Common.Blend;
                public static IObservable<string> BlendObservable => global::BeUtl.Language.Resources.S.Common.BlendObservable;
                public static string Foreground => global::BeUtl.Language.Resources.S.Common.Foreground;
                public static IObservable<string> ForegroundObservable => global::BeUtl.Language.Resources.S.Common.ForegroundObservable;
                public static string OpacityMask => global::BeUtl.Language.Resources.S.Common.OpacityMask;
                public static IObservable<string> OpacityMaskObservable => global::BeUtl.Language.Resources.S.Common.OpacityMaskObservable;
                public static string IndexBrush => global::BeUtl.Language.Resources.S.Common.Brush;
                public static IObservable<string> IndexBrushObservable => global::BeUtl.Language.Resources.S.Common.BrushObservable;
                public static string IndexImageFilter => global::BeUtl.Language.Resources.S.Common.ImageFilter;
                public static IObservable<string> IndexImageFilterObservable => global::BeUtl.Language.Resources.S.Common.ImageFilterObservable;
                public static string IndexBitmapEffect => global::BeUtl.Language.Resources.S.Common.BitmapEffect;
                public static IObservable<string> IndexBitmapEffectObservable => global::BeUtl.Language.Resources.S.Common.BitmapEffectObservable;
                public static string IndexTransform => global::BeUtl.Language.Resources.S.Common.Transform;
                public static IObservable<string> IndexTransformObservable => global::BeUtl.Language.Resources.S.Common.TransformObservable;
                public static class Brush {
                    public static string LinearGradientBrush => global::BeUtl.Language.Resources.S.Common.LinearGradientBrush;
                    public static IObservable<string> LinearGradientBrushObservable => global::BeUtl.Language.Resources.S.Common.LinearGradientBrushObservable;
                }
                public static class ImageFilter {
                    public static string Blur => global::BeUtl.Language.Resources.S.Common.Blur;
                    public static IObservable<string> BlurObservable => global::BeUtl.Language.Resources.S.Common.BlurObservable;
                    public static string DropShadow => global::BeUtl.Language.Resources.S.Common.DropShadow;
                    public static IObservable<string> DropShadowObservable => global::BeUtl.Language.Resources.S.Common.DropShadowObservable;
                }
                public static class BitmapEffect {
                    public static string Blur => global::BeUtl.Language.Resources.S.Common.Blur;
                    public static IObservable<string> BlurObservable => global::BeUtl.Language.Resources.S.Common.BlurObservable;
                    public static string InnerShadow => global::BeUtl.Language.Resources.S.Common.InnerShadow;
                    public static IObservable<string> InnerShadowObservable => global::BeUtl.Language.Resources.S.Common.InnerShadowObservable;
                    public static string Border => global::BeUtl.Language.Resources.S.Common.Border;
                    public static IObservable<string> BorderObservable => global::BeUtl.Language.Resources.S.Common.BorderObservable;
                }
                public static class Transform {
                    public static string Rotation => global::BeUtl.Language.Resources.S.Common.Rotation;
                    public static IObservable<string> RotationObservable => global::BeUtl.Language.Resources.S.Common.RotationObservable;
                    public static string Rotation3D => global::BeUtl.Language.Resources.S.Common.Rotation3D;
                    public static IObservable<string> Rotation3DObservable => global::BeUtl.Language.Resources.S.Common.Rotation3DObservable;
                    public static string Scale => global::BeUtl.Language.Resources.S.Common.Scale;
                    public static IObservable<string> ScaleObservable => global::BeUtl.Language.Resources.S.Common.ScaleObservable;
                    public static string Skew => global::BeUtl.Language.Resources.S.Common.Skew;
                    public static IObservable<string> SkewObservable => global::BeUtl.Language.Resources.S.Common.SkewObservable;
                    public static string Translate => global::BeUtl.Language.Resources.S.Common.Translate;
                    public static IObservable<string> TranslateObservable => global::BeUtl.Language.Resources.S.Common.TranslateObservable;
                }
            }
        }
        public static class Warning {
            public static string ItAlreadyExists => "S.Warning.ItAlreadyExists".GetStringResource("It already exists.");
            private static IObservable<string>? _ItAlreadyExistsObservable;
            public static IObservable<string> ItAlreadyExistsObservable => _ItAlreadyExistsObservable ??= "S.Warning.ItAlreadyExists".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.ItAlreadyExists);
            public static string ValueLessThanOrEqualToZero => "S.Warning.ValueLessThanOrEqualToZero".GetStringResource("Cannot specify a value less than or equal to 0.");
            private static IObservable<string>? _ValueLessThanOrEqualToZeroObservable;
            public static IObservable<string> ValueLessThanOrEqualToZeroObservable => _ValueLessThanOrEqualToZeroObservable ??= "S.Warning.ValueLessThanOrEqualToZero".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.ValueLessThanOrEqualToZero);
            public static string ValueLessThanZero => "S.Warning.ValueLessThanZero".GetStringResource("Cannot specify a value less than to 0.");
            private static IObservable<string>? _ValueLessThanZeroObservable;
            public static IObservable<string> ValueLessThanZeroObservable => _ValueLessThanZeroObservable ??= "S.Warning.ValueLessThanZero".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.ValueLessThanZero);
            public static string CannotRenameBecauseConflicts => "S.Warning.CannotRenameBecauseConflicts".GetStringResource("Cannot rename from \"{0}\" to \"{1}\"\nbecause the new name conflicts with an existing folder.\n");
            private static IObservable<string>? _CannotRenameBecauseConflictsObservable;
            public static IObservable<string> CannotRenameBecauseConflictsObservable => _CannotRenameBecauseConflictsObservable ??= "S.Warning.CannotRenameBecauseConflicts".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.CannotRenameBecauseConflicts);
            public static string FileDoesNotExist => "S.Warning.FileDoesNotExist".GetStringResource("File does not exist.");
            private static IObservable<string>? _FileDoesNotExistObservable;
            public static IObservable<string> FileDoesNotExistObservable => _FileDoesNotExistObservable ??= "S.Warning.FileDoesNotExist".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.FileDoesNotExist);
            public static string CouldNotOpenProject => "S.Warning.CouldNotOpenProject".GetStringResource("Could not open project.");
            private static IObservable<string>? _CouldNotOpenProjectObservable;
            public static IObservable<string> CouldNotOpenProjectObservable => _CouldNotOpenProjectObservable ??= "S.Warning.CouldNotOpenProject".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.CouldNotOpenProject);
            public static string NameCannotBeLeftBlank => "S.Warning.NameCannotBeLeftBlank".GetStringResource("Name cannot be left blank.");
            private static IObservable<string>? _NameCannotBeLeftBlankObservable;
            public static IObservable<string> NameCannotBeLeftBlankObservable => _NameCannotBeLeftBlankObservable ??= "S.Warning.NameCannotBeLeftBlank".GetStringObservable(global::BeUtl.Language.Resources.S.Warning.NameCannotBeLeftBlank);
        }
        public static class DevelopPage {
            public static string Shortcuts => "S.DevelopPage.Shortcuts".GetStringResource("Shortcuts");
            private static IObservable<string>? _ShortcutsObservable;
            public static IObservable<string> ShortcutsObservable => _ShortcutsObservable ??= "S.DevelopPage.Shortcuts".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Shortcuts);
            public static string CreateNewPackage => "S.DevelopPage.CreateNewPackage".GetStringResource("Create new package");
            private static IObservable<string>? _CreateNewPackageObservable;
            public static IObservable<string> CreateNewPackageObservable => _CreateNewPackageObservable ??= "S.DevelopPage.CreateNewPackage".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.CreateNewPackage);
            public static string CreateNewPackageDescription => "S.DevelopPage.CreateNewPackageDescription".GetStringResource("Create a new package for distribution");
            private static IObservable<string>? _CreateNewPackageDescriptionObservable;
            public static IObservable<string> CreateNewPackageDescriptionObservable => _CreateNewPackageDescriptionObservable ??= "S.DevelopPage.CreateNewPackageDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.CreateNewPackageDescription);
            public static string Documents => "S.DevelopPage.Documents".GetStringResource("Documents");
            private static IObservable<string>? _DocumentsObservable;
            public static IObservable<string> DocumentsObservable => _DocumentsObservable ??= "S.DevelopPage.Documents".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Documents);
            public static string DocumentsDescription => "S.DevelopPage.DocumentsDescription".GetStringResource("Documentation for developers");
            private static IObservable<string>? _DocumentsDescriptionObservable;
            public static IObservable<string> DocumentsDescriptionObservable => _DocumentsDescriptionObservable ??= "S.DevelopPage.DocumentsDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DocumentsDescription);
            public static string Packages => "S.DevelopPage.Packages".GetStringResource("Packages");
            private static IObservable<string>? _PackagesObservable;
            public static IObservable<string> PackagesObservable => _PackagesObservable ??= "S.DevelopPage.Packages".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Packages);
            public static string DiscardChanges => "S.DevelopPage.DiscardChanges".GetStringResource("Discard changes");
            private static IObservable<string>? _DiscardChangesObservable;
            public static IObservable<string> DiscardChangesObservable => _DiscardChangesObservable ??= "S.DevelopPage.DiscardChanges".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DiscardChanges);
            public static class DeletePackage {
                public static string Title => "S.DevelopPage.DeletePackage.Title".GetStringResource("Delete package");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.DeletePackage.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeletePackage.Title);
                public static string Content => "S.DevelopPage.DeletePackage.Content".GetStringResource("Are you sure you want to delete the package?\nIf you do this, you will never be able to access this package again.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.DeletePackage.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeletePackage.Content);
            }
            public static class DeleteRelease {
                public static string Title => "S.DevelopPage.DeleteRelease.Title".GetStringResource("Delete release");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.DeleteRelease.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeleteRelease.Title);
                public static string Content => "S.DevelopPage.DeleteRelease.Content".GetStringResource("Are you sure you want to delete the release?\nIf you do this, you will never be able to access this release again.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.DeleteRelease.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeleteRelease.Content);
            }
            public static class DeleteResource {
                public static string Title => "S.DevelopPage.DeleteResource.Title".GetStringResource("Delete resource");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.DeleteResource.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeleteResource.Title);
                public static string Content => "S.DevelopPage.DeleteResource.Content".GetStringResource("Are you sure you want to delete the resource?");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.DeleteResource.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.DeleteResource.Content);
            }
            public static class MakePublicPackage {
                public static string Title => "S.DevelopPage.MakePublicPackage.Title".GetStringResource("Publish package");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.MakePublicPackage.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePublicPackage.Title);
                public static string Content => "S.DevelopPage.MakePublicPackage.Content".GetStringResource("Are you sure you want to publish this package?\nDoing so will allow others to download this package.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.MakePublicPackage.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePublicPackage.Content);
            }
            public static class MakePrivatePackage {
                public static string Title => "S.DevelopPage.MakePrivatePackage.Title".GetStringResource("Make the package private");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.MakePrivatePackage.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePrivatePackage.Title);
                public static string Content => "S.DevelopPage.MakePrivatePackage.Content".GetStringResource("Are you sure you want to keep this package private?\nDoing so will prevent others from downloading this package.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.MakePrivatePackage.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePrivatePackage.Content);
            }
            public static class MakePublicRelease {
                public static string Title => "S.DevelopPage.MakePublicRelease.Title".GetStringResource("Publish release");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.MakePublicRelease.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePublicRelease.Title);
                public static string Content => "S.DevelopPage.MakePublicRelease.Content".GetStringResource("Are you sure you want to publish this release?\nDoing so will allow others to download this release.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.MakePublicRelease.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePublicRelease.Content);
            }
            public static class MakePrivateRelease {
                public static string Title => "S.DevelopPage.MakePrivateRelease.Title".GetStringResource("Make the release private");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.MakePrivateRelease.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePrivateRelease.Title);
                public static string Content => "S.DevelopPage.MakePrivateRelease.Content".GetStringResource("Are you sure you want to keep this release private?\nDoing so will prevent others from downloading this release.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.DevelopPage.MakePrivateRelease.Content".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.MakePrivateRelease.Content);
            }
            public static class AddRelease {
                public static string Title => "S.DevelopPage.AddRelease.Title".GetStringResource("Add release");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.AddRelease.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.AddRelease.Title);
            }
            public static class EditRelease {
                public static string Title => "S.DevelopPage.EditRelease.Title".GetStringResource("Edit release");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.EditRelease.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.EditRelease.Title);
            }
            public static class Release {
                public static class Fields {
                    public static string Title => "S.DevelopPage.Release.Fields.Title".GetStringResource("Title");
                    private static IObservable<string>? _TitleObservable;
                    public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.Release.Fields.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.Title);
                    public static string TitleDescription => "S.DevelopPage.Release.Fields.TitleDescription".GetStringResource("Title of this release");
                    private static IObservable<string>? _TitleDescriptionObservable;
                    public static IObservable<string> TitleDescriptionObservable => _TitleDescriptionObservable ??= "S.DevelopPage.Release.Fields.TitleDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.TitleDescription);
                    public static string Body => "S.DevelopPage.Release.Fields.Body".GetStringResource("Release note");
                    private static IObservable<string>? _BodyObservable;
                    public static IObservable<string> BodyObservable => _BodyObservable ??= "S.DevelopPage.Release.Fields.Body".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.Body);
                    public static string BodyDescription => "S.DevelopPage.Release.Fields.BodyDescription".GetStringResource("Description of this release.");
                    private static IObservable<string>? _BodyDescriptionObservable;
                    public static IObservable<string> BodyDescriptionObservable => _BodyDescriptionObservable ??= "S.DevelopPage.Release.Fields.BodyDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.BodyDescription);
                    public static string Version => "S.DevelopPage.Release.Fields.Version".GetStringResource("Version");
                    private static IObservable<string>? _VersionObservable;
                    public static IObservable<string> VersionObservable => _VersionObservable ??= "S.DevelopPage.Release.Fields.Version".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.Version);
                    public static string VersionDescription => "S.DevelopPage.Release.Fields.VersionDescription".GetStringResource("Version of this release.");
                    private static IObservable<string>? _VersionDescriptionObservable;
                    public static IObservable<string> VersionDescriptionObservable => _VersionDescriptionObservable ??= "S.DevelopPage.Release.Fields.VersionDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Release.Fields.VersionDescription);
                }
            }
            public static class AddResource {
                public static string Title => "S.DevelopPage.AddResource.Title".GetStringResource("Add resource");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.DevelopPage.AddResource.Title".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.AddResource.Title);
            }
            public static class Resource {
                public static class Fields {
                    public static string Culture => "S.DevelopPage.Resource.Fields.Culture".GetStringResource("Locale");
                    private static IObservable<string>? _CultureObservable;
                    public static IObservable<string> CultureObservable => _CultureObservable ??= "S.DevelopPage.Resource.Fields.Culture".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Resource.Fields.Culture);
                    public static string CultureDescription => "S.DevelopPage.Resource.Fields.CultureDescription".GetStringResource("Locale in which this resource is displayed.");
                    private static IObservable<string>? _CultureDescriptionObservable;
                    public static IObservable<string> CultureDescriptionObservable => _CultureDescriptionObservable ??= "S.DevelopPage.Resource.Fields.CultureDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Resource.Fields.CultureDescription);
                    public static string InheritField => "S.DevelopPage.Resource.Fields.InheritField".GetStringResource("Inherit value");
                    private static IObservable<string>? _InheritFieldObservable;
                    public static IObservable<string> InheritFieldObservable => _InheritFieldObservable ??= "S.DevelopPage.Resource.Fields.InheritField".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Resource.Fields.InheritField);
                }
            }
            public static class Package {
                public static string NoLogoImageAvailable => "S.DevelopPage.Package.NoLogoImageAvailable".GetStringResource("No logo image available");
                private static IObservable<string>? _NoLogoImageAvailableObservable;
                public static IObservable<string> NoLogoImageAvailableObservable => _NoLogoImageAvailableObservable ??= "S.DevelopPage.Package.NoLogoImageAvailable".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.NoLogoImageAvailable);
                public static string Settings => global::BeUtl.Language.Resources.S.Common.Settings;
                public static IObservable<string> SettingsObservable => global::BeUtl.Language.Resources.S.Common.SettingsObservable;
                public static string SettingsDescription => "S.DevelopPage.Package.SettingsDescription".GetStringResource("Settings of this package.");
                private static IObservable<string>? _SettingsDescriptionObservable;
                public static IObservable<string> SettingsDescriptionObservable => _SettingsDescriptionObservable ??= "S.DevelopPage.Package.SettingsDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.SettingsDescription);
                public static string Releases => "S.DevelopPage.Package.Releases".GetStringResource("Releases");
                private static IObservable<string>? _ReleasesObservable;
                public static IObservable<string> ReleasesObservable => _ReleasesObservable ??= "S.DevelopPage.Package.Releases".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Releases);
                public static string ReleasesDescription => "S.DevelopPage.Package.ReleasesDescription".GetStringResource("Manage releases");
                private static IObservable<string>? _ReleasesDescriptionObservable;
                public static IObservable<string> ReleasesDescriptionObservable => _ReleasesDescriptionObservable ??= "S.DevelopPage.Package.ReleasesDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.ReleasesDescription);
                public static string Resource => "S.DevelopPage.Package.Resource".GetStringResource("Resource");
                private static IObservable<string>? _ResourceObservable;
                public static IObservable<string> ResourceObservable => _ResourceObservable ??= "S.DevelopPage.Package.Resource".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Resource);
                public static string BaseResourceDescription => "S.DevelopPage.Package.BaseResourceDescription".GetStringResource("The value of this item is displayed in the locale not set in 'Locale-specific resources'.");
                private static IObservable<string>? _BaseResourceDescriptionObservable;
                public static IObservable<string> BaseResourceDescriptionObservable => _BaseResourceDescriptionObservable ??= "S.DevelopPage.Package.BaseResourceDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.BaseResourceDescription);
                public static string LocaleSpecificResources => "S.DevelopPage.Package.LocaleSpecificResources".GetStringResource("Locale-specific resources");
                private static IObservable<string>? _LocaleSpecificResourcesObservable;
                public static IObservable<string> LocaleSpecificResourcesObservable => _LocaleSpecificResourcesObservable ??= "S.DevelopPage.Package.LocaleSpecificResources".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.LocaleSpecificResources);
                public static string LocaleSpecificResourcesDescription => "S.DevelopPage.Package.LocaleSpecificResourcesDescription".GetStringResource("Resources added here will be displayed in that locale.");
                private static IObservable<string>? _LocaleSpecificResourcesDescriptionObservable;
                public static IObservable<string> LocaleSpecificResourcesDescriptionObservable => _LocaleSpecificResourcesDescriptionObservable ??= "S.DevelopPage.Package.LocaleSpecificResourcesDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.LocaleSpecificResourcesDescription);
                public static string MoveOneFront => "S.DevelopPage.Package.MoveOneFront".GetStringResource("Move one front");
                private static IObservable<string>? _MoveOneFrontObservable;
                public static IObservable<string> MoveOneFrontObservable => _MoveOneFrontObservable ??= "S.DevelopPage.Package.MoveOneFront".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.MoveOneFront);
                public static string MoveOneBack => "S.DevelopPage.Package.MoveOneBack".GetStringResource("Move one back");
                private static IObservable<string>? _MoveOneBackObservable;
                public static IObservable<string> MoveOneBackObservable => _MoveOneBackObservable ??= "S.DevelopPage.Package.MoveOneBack".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.MoveOneBack);
                public static class Fields {
                    public static string Name => "S.DevelopPage.Package.Fields.Name".GetStringResource("Name");
                    private static IObservable<string>? _NameObservable;
                    public static IObservable<string> NameObservable => _NameObservable ??= "S.DevelopPage.Package.Fields.Name".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.Name);
                    public static string NameDescription => "S.DevelopPage.Package.Fields.NameDescription".GetStringResource("String to identify this package.");
                    private static IObservable<string>? _NameDescriptionObservable;
                    public static IObservable<string> NameDescriptionObservable => _NameDescriptionObservable ??= "S.DevelopPage.Package.Fields.NameDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.NameDescription);
                    public static string DisplayName => "S.DevelopPage.Package.Fields.DisplayName".GetStringResource("Display name");
                    private static IObservable<string>? _DisplayNameObservable;
                    public static IObservable<string> DisplayNameObservable => _DisplayNameObservable ??= "S.DevelopPage.Package.Fields.DisplayName".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.DisplayName);
                    public static string DisplayNameDescription => "S.DevelopPage.Package.Fields.DisplayNameDescription".GetStringResource("Display name of this package.");
                    private static IObservable<string>? _DisplayNameDescriptionObservable;
                    public static IObservable<string> DisplayNameDescriptionObservable => _DisplayNameDescriptionObservable ??= "S.DevelopPage.Package.Fields.DisplayNameDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.DisplayNameDescription);
                    public static string Description => "S.DevelopPage.Package.Fields.Description".GetStringResource("Description");
                    private static IObservable<string>? _DescriptionObservable;
                    public static IObservable<string> DescriptionObservable => _DescriptionObservable ??= "S.DevelopPage.Package.Fields.Description".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.Description);
                    public static string DescriptionDescription => "S.DevelopPage.Package.Fields.DescriptionDescription".GetStringResource("Description of this package.");
                    private static IObservable<string>? _DescriptionDescriptionObservable;
                    public static IObservable<string> DescriptionDescriptionObservable => _DescriptionDescriptionObservable ??= "S.DevelopPage.Package.Fields.DescriptionDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.DescriptionDescription);
                    public static string ShortDescription => "S.DevelopPage.Package.Fields.ShortDescription".GetStringResource("Short description");
                    private static IObservable<string>? _ShortDescriptionObservable;
                    public static IObservable<string> ShortDescriptionObservable => _ShortDescriptionObservable ??= "S.DevelopPage.Package.Fields.ShortDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.ShortDescription);
                    public static string ShortDescriptionDescription => "S.DevelopPage.Package.Fields.ShortDescriptionDescription".GetStringResource("Short description of this package.");
                    private static IObservable<string>? _ShortDescriptionDescriptionObservable;
                    public static IObservable<string> ShortDescriptionDescriptionObservable => _ShortDescriptionDescriptionObservable ??= "S.DevelopPage.Package.Fields.ShortDescriptionDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.ShortDescriptionDescription);
                    public static string LogoImage => "S.DevelopPage.Package.Fields.LogoImage".GetStringResource("Logo image");
                    private static IObservable<string>? _LogoImageObservable;
                    public static IObservable<string> LogoImageObservable => _LogoImageObservable ??= "S.DevelopPage.Package.Fields.LogoImage".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.LogoImage);
                    public static string LogoImageDescription => "S.DevelopPage.Package.Fields.LogoImageDescription".GetStringResource("Logo image of this package.");
                    private static IObservable<string>? _LogoImageDescriptionObservable;
                    public static IObservable<string> LogoImageDescriptionObservable => _LogoImageDescriptionObservable ??= "S.DevelopPage.Package.Fields.LogoImageDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.LogoImageDescription);
                    public static string Screenshots => "S.DevelopPage.Package.Fields.Screenshots".GetStringResource("Screenshots");
                    private static IObservable<string>? _ScreenshotsObservable;
                    public static IObservable<string> ScreenshotsObservable => _ScreenshotsObservable ??= "S.DevelopPage.Package.Fields.Screenshots".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.Screenshots);
                    public static string ScreenshotsDescription => "S.DevelopPage.Package.Fields.ScreenshotsDescription".GetStringResource("Screenshots of this package (max. 4)");
                    private static IObservable<string>? _ScreenshotsDescriptionObservable;
                    public static IObservable<string> ScreenshotsDescriptionObservable => _ScreenshotsDescriptionObservable ??= "S.DevelopPage.Package.Fields.ScreenshotsDescription".GetStringObservable(global::BeUtl.Language.Resources.S.DevelopPage.Package.Fields.ScreenshotsDescription);
                }
            }
        }
        public static class SettingsPage {
            public static string Account => global::BeUtl.Language.Resources.S.Common.Account;
            public static IObservable<string> AccountObservable => global::BeUtl.Language.Resources.S.Common.AccountObservable;
            public static string View => global::BeUtl.Language.Resources.S.Common.View;
            public static IObservable<string> ViewObservable => global::BeUtl.Language.Resources.S.Common.ViewObservable;
            public static string Font => global::BeUtl.Language.Resources.S.Common.Font;
            public static IObservable<string> FontObservable => global::BeUtl.Language.Resources.S.Common.FontObservable;
            public static string Extensions => global::BeUtl.Language.Resources.S.Common.Extensions;
            public static IObservable<string> ExtensionsObservable => global::BeUtl.Language.Resources.S.Common.ExtensionsObservable;
            public static string Info => global::BeUtl.Language.Resources.S.Common.Info;
            public static IObservable<string> InfoObservable => global::BeUtl.Language.Resources.S.Common.InfoObservable;
            public static string Backup => global::BeUtl.Language.Resources.S.Common.Backup;
            public static IObservable<string> BackupObservable => global::BeUtl.Language.Resources.S.Common.BackupObservable;
        }
        public static class InfomationPage {
            public static string Links => global::BeUtl.Language.Resources.S.Common.Links;
            public static IObservable<string> LinksObservable => global::BeUtl.Language.Resources.S.Common.LinksObservable;
            public static string SourceCode => global::BeUtl.Language.Resources.S.Common.SourceCode;
            public static IObservable<string> SourceCodeObservable => global::BeUtl.Language.Resources.S.Common.SourceCodeObservable;
            public static string License => global::BeUtl.Language.Resources.S.Common.License;
            public static IObservable<string> LicenseObservable => global::BeUtl.Language.Resources.S.Common.LicenseObservable;
            public static string ThirdPartyLicenses => global::BeUtl.Language.Resources.S.Common.ThirdPartyLicenses;
            public static IObservable<string> ThirdPartyLicensesObservable => global::BeUtl.Language.Resources.S.Common.ThirdPartyLicensesObservable;
        }
        public static class ViewSettingsPage {
            public static string IndexTheme => global::BeUtl.Language.Resources.S.Common.Theme;
            public static IObservable<string> IndexThemeObservable => global::BeUtl.Language.Resources.S.Common.ThemeObservable;
            public static string ThemeDescription => "S.ViewSettingsPage.ThemeDescription".GetStringResource("Select the theme of the app you want to display");
            private static IObservable<string>? _ThemeDescriptionObservable;
            public static IObservable<string> ThemeDescriptionObservable => _ThemeDescriptionObservable ??= "S.ViewSettingsPage.ThemeDescription".GetStringObservable(global::BeUtl.Language.Resources.S.ViewSettingsPage.ThemeDescription);
            public static string MicaEffect => "S.ViewSettingsPage.MicaEffect".GetStringResource("Mica Effect");
            private static IObservable<string>? _MicaEffectObservable;
            public static IObservable<string> MicaEffectObservable => _MicaEffectObservable ??= "S.ViewSettingsPage.MicaEffect".GetStringObservable(global::BeUtl.Language.Resources.S.ViewSettingsPage.MicaEffect);
            public static string Language => global::BeUtl.Language.Resources.S.Common.Language;
            public static IObservable<string> LanguageObservable => global::BeUtl.Language.Resources.S.Common.LanguageObservable;
            public static class Theme {
                public static string Light => global::BeUtl.Language.Resources.S.Common.Light;
                public static IObservable<string> LightObservable => global::BeUtl.Language.Resources.S.Common.LightObservable;
                public static string Dark => global::BeUtl.Language.Resources.S.Common.Dark;
                public static IObservable<string> DarkObservable => global::BeUtl.Language.Resources.S.Common.DarkObservable;
                public static string HighContrast => global::BeUtl.Language.Resources.S.Common.HighContrast;
                public static IObservable<string> HighContrastObservable => global::BeUtl.Language.Resources.S.Common.HighContrastObservable;
                public static string System => global::BeUtl.Language.Resources.S.Common.FollowSystem;
                public static IObservable<string> SystemObservable => global::BeUtl.Language.Resources.S.Common.FollowSystemObservable;
            }
        }
        public static class ExtensionsSettingsPage {
            public static string IndexEditorExtensionPriority => "S.ExtensionsSettingsPage.EditorExtensionPriority".GetStringResource("Editor Extension Priority");
            private static IObservable<string>? _IndexEditorExtensionPriorityObservable;
            public static IObservable<string> IndexEditorExtensionPriorityObservable => _IndexEditorExtensionPriorityObservable ??= "S.ExtensionsSettingsPage.EditorExtensionPriority".GetStringObservable(global::BeUtl.Language.Resources.S.ExtensionsSettingsPage.IndexEditorExtensionPriority);
            public static class EditorExtensionPriority {
                public static string Higher => "S.ExtensionsSettingsPage.EditorExtensionPriority.Higher".GetStringResource("Higher");
                private static IObservable<string>? _HigherObservable;
                public static IObservable<string> HigherObservable => _HigherObservable ??= "S.ExtensionsSettingsPage.EditorExtensionPriority.Higher".GetStringObservable(global::BeUtl.Language.Resources.S.ExtensionsSettingsPage.EditorExtensionPriority.Higher);
                public static string Lower => "S.ExtensionsSettingsPage.EditorExtensionPriority.Lower".GetStringResource("Lower");
                private static IObservable<string>? _LowerObservable;
                public static IObservable<string> LowerObservable => _LowerObservable ??= "S.ExtensionsSettingsPage.EditorExtensionPriority.Lower".GetStringObservable(global::BeUtl.Language.Resources.S.ExtensionsSettingsPage.EditorExtensionPriority.Lower);
                public static string All => "S.ExtensionsSettingsPage.EditorExtensionPriority.All".GetStringResource("All Editor Extensions");
                private static IObservable<string>? _AllObservable;
                public static IObservable<string> AllObservable => _AllObservable ??= "S.ExtensionsSettingsPage.EditorExtensionPriority.All".GetStringObservable(global::BeUtl.Language.Resources.S.ExtensionsSettingsPage.EditorExtensionPriority.All);
                public static class Dialog1 {
                    public static string Title => "S.ExtensionsSettingsPage.EditorExtensionPriority.Dialog1.Title".GetStringResource("Add file extension");
                    private static IObservable<string>? _TitleObservable;
                    public static IObservable<string> TitleObservable => _TitleObservable ??= "S.ExtensionsSettingsPage.EditorExtensionPriority.Dialog1.Title".GetStringObservable(global::BeUtl.Language.Resources.S.ExtensionsSettingsPage.EditorExtensionPriority.Dialog1.Title);
                }
            }
        }
        public static class AccountSettingsPage {
            public static string SignOut => "S.AccountSettingsPage.SignOut".GetStringResource("Sign out");
            private static IObservable<string>? _SignOutObservable;
            public static IObservable<string> SignOutObservable => _SignOutObservable ??= "S.AccountSettingsPage.SignOut".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.SignOut);
            public static string ChangeDisplayName => "S.AccountSettingsPage.ChangeDisplayName".GetStringResource("Change display name");
            private static IObservable<string>? _ChangeDisplayNameObservable;
            public static IObservable<string> ChangeDisplayNameObservable => _ChangeDisplayNameObservable ??= "S.AccountSettingsPage.ChangeDisplayName".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.ChangeDisplayName);
            public static string Change => "S.AccountSettingsPage.Change".GetStringResource("Change");
            private static IObservable<string>? _ChangeObservable;
            public static IObservable<string> ChangeObservable => _ChangeObservable ??= "S.AccountSettingsPage.Change".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.Change);
            public static string DeleteAccount => "S.AccountSettingsPage.DeleteAccount".GetStringResource("Delete account");
            private static IObservable<string>? _DeleteAccountObservable;
            public static IObservable<string> DeleteAccountObservable => _DeleteAccountObservable ??= "S.AccountSettingsPage.DeleteAccount".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.DeleteAccount);
            public static string ChangePassword => "S.AccountSettingsPage.ChangePassword".GetStringResource("Change password");
            private static IObservable<string>? _ChangePasswordObservable;
            public static IObservable<string> ChangePasswordObservable => _ChangePasswordObservable ??= "S.AccountSettingsPage.ChangePassword".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.ChangePassword);
            public static string NewPassword => "S.AccountSettingsPage.NewPassword".GetStringResource("New password");
            private static IObservable<string>? _NewPasswordObservable;
            public static IObservable<string> NewPasswordObservable => _NewPasswordObservable ??= "S.AccountSettingsPage.NewPassword".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.NewPassword);
            public static string YourEmailAddressHasBeenVerified => "S.AccountSettingsPage.YourEmailAddressHasBeenVerified".GetStringResource("Your email address has been verified.");
            private static IObservable<string>? _YourEmailAddressHasBeenVerifiedObservable;
            public static IObservable<string> YourEmailAddressHasBeenVerifiedObservable => _YourEmailAddressHasBeenVerifiedObservable ??= "S.AccountSettingsPage.YourEmailAddressHasBeenVerified".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.YourEmailAddressHasBeenVerified);
            public static string WithGoogle => "S.AccountSettingsPage.WithGoogle".GetStringResource("With Google.");
            private static IObservable<string>? _WithGoogleObservable;
            public static IObservable<string> WithGoogleObservable => _WithGoogleObservable ??= "S.AccountSettingsPage.WithGoogle".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.WithGoogle);
            public static string WithPassword => "S.AccountSettingsPage.WithPassword".GetStringResource("With Password.");
            private static IObservable<string>? _WithPasswordObservable;
            public static IObservable<string> WithPasswordObservable => _WithPasswordObservable ??= "S.AccountSettingsPage.WithPassword".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.WithPassword);
            public static string UnlinkFromGoogle => "S.AccountSettingsPage.UnlinkFromGoogle".GetStringResource("Unlink from Google");
            private static IObservable<string>? _UnlinkFromGoogleObservable;
            public static IObservable<string> UnlinkFromGoogleObservable => _UnlinkFromGoogleObservable ??= "S.AccountSettingsPage.UnlinkFromGoogle".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.UnlinkFromGoogle);
            public static string UnlinkFromGoogleBody => "S.AccountSettingsPage.UnlinkFromGoogleBody".GetStringResource("Unlink from Google.\nIf you perform this operation, you will not be able to sign in using your Google account.\nDo you want to remove the linkage?\n");
            private static IObservable<string>? _UnlinkFromGoogleBodyObservable;
            public static IObservable<string> UnlinkFromGoogleBodyObservable => _UnlinkFromGoogleBodyObservable ??= "S.AccountSettingsPage.UnlinkFromGoogleBody".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.UnlinkFromGoogleBody);
            public static string LinkWithGoogle => "S.AccountSettingsPage.LinkWithGoogle".GetStringResource("Link with Google");
            private static IObservable<string>? _LinkWithGoogleObservable;
            public static IObservable<string> LinkWithGoogleObservable => _LinkWithGoogleObservable ??= "S.AccountSettingsPage.LinkWithGoogle".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.LinkWithGoogle);
            public static class Dialog1 {
                public static string Title => "S.AccountSettingsPage.Dialog1.Title".GetStringResource("Do you want to delete your account?");
                private static IObservable<string>? _TitleObservable;
                public static IObservable<string> TitleObservable => _TitleObservable ??= "S.AccountSettingsPage.Dialog1.Title".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.Dialog1.Title);
                public static string Content => "S.AccountSettingsPage.Dialog1.Content".GetStringResource("Delete the '{0}' account.\nThis operation cannot be undone.\n");
                private static IObservable<string>? _ContentObservable;
                public static IObservable<string> ContentObservable => _ContentObservable ??= "S.AccountSettingsPage.Dialog1.Content".GetStringObservable(global::BeUtl.Language.Resources.S.AccountSettingsPage.Dialog1.Content);
            }
        }
        public static class BackupSettingsPage {
            public static string BackupSettings => "S.BackupSettingsPage.BackupSettings".GetStringResource("Back up settings");
            private static IObservable<string>? _BackupSettingsObservable;
            public static IObservable<string> BackupSettingsObservable => _BackupSettingsObservable ??= "S.BackupSettingsPage.BackupSettings".GetStringObservable(global::BeUtl.Language.Resources.S.BackupSettingsPage.BackupSettings);
        }
        public static class Editors {
            public static class PixelPoint {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
            }
            public static class PixelRect {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
                public static string Z => global::BeUtl.Language.Resources.S.Common.Width;
                public static IObservable<string> ZObservable => global::BeUtl.Language.Resources.S.Common.WidthObservable;
                public static string W => global::BeUtl.Language.Resources.S.Common.Height;
                public static IObservable<string> WObservable => global::BeUtl.Language.Resources.S.Common.HeightObservable;
            }
            public static class PixelSize {
                public static string X => global::BeUtl.Language.Resources.S.Common.Width;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.WidthObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Height;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.HeightObservable;
            }
            public static class Point {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
            }
            public static class Rect {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
                public static string Z => global::BeUtl.Language.Resources.S.Common.Width;
                public static IObservable<string> ZObservable => global::BeUtl.Language.Resources.S.Common.WidthObservable;
                public static string W => global::BeUtl.Language.Resources.S.Common.Height;
                public static IObservable<string> WObservable => global::BeUtl.Language.Resources.S.Common.HeightObservable;
            }
            public static class Size {
                public static string X => global::BeUtl.Language.Resources.S.Common.Width;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.WidthObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Height;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.HeightObservable;
            }
            public static class Vector2 {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
            }
            public static class Vector3 {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
                public static string Z => global::BeUtl.Language.Resources.S.Common.Z;
                public static IObservable<string> ZObservable => global::BeUtl.Language.Resources.S.Common.ZObservable;
            }
            public static class Vector4 {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
                public static string Z => global::BeUtl.Language.Resources.S.Common.Z;
                public static IObservable<string> ZObservable => global::BeUtl.Language.Resources.S.Common.ZObservable;
                public static string W => global::BeUtl.Language.Resources.S.Common.W;
                public static IObservable<string> WObservable => global::BeUtl.Language.Resources.S.Common.WObservable;
            }
            public static class Vector {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
            }
            public static class RelativePoint {
                public static string X => global::BeUtl.Language.Resources.S.Common.X;
                public static IObservable<string> XObservable => global::BeUtl.Language.Resources.S.Common.XObservable;
                public static string Y => global::BeUtl.Language.Resources.S.Common.Y;
                public static IObservable<string> YObservable => global::BeUtl.Language.Resources.S.Common.YObservable;
            }
        }
        public static class MainView {
            public static string IndexFile => global::BeUtl.Language.Resources.S.Common.File;
            public static IObservable<string> IndexFileObservable => global::BeUtl.Language.Resources.S.Common.FileObservable;
            public static string IndexEdit => global::BeUtl.Language.Resources.S.Common.Edit;
            public static IObservable<string> IndexEditObservable => global::BeUtl.Language.Resources.S.Common.EditObservable;
            public static string IndexProject => global::BeUtl.Language.Resources.S.Common.Project;
            public static IObservable<string> IndexProjectObservable => global::BeUtl.Language.Resources.S.Common.ProjectObservable;
            public static string IndexScene => global::BeUtl.Language.Resources.S.Common.Scene;
            public static IObservable<string> IndexSceneObservable => global::BeUtl.Language.Resources.S.Common.SceneObservable;
            public static string IndexView => global::BeUtl.Language.Resources.S.Common.View;
            public static IObservable<string> IndexViewObservable => global::BeUtl.Language.Resources.S.Common.ViewObservable;
            public static string Object => global::BeUtl.Language.Resources.S.Common.Object;
            public static IObservable<string> ObjectObservable => global::BeUtl.Language.Resources.S.Common.ObjectObservable;
            public static string Help => global::BeUtl.Language.Resources.S.Common.Help;
            public static IObservable<string> HelpObservable => global::BeUtl.Language.Resources.S.Common.HelpObservable;
            public static string Extensions => global::BeUtl.Language.Resources.S.Common.Extensions;
            public static IObservable<string> ExtensionsObservable => global::BeUtl.Language.Resources.S.Common.ExtensionsObservable;
            public static string Output => global::BeUtl.Language.Resources.S.Common.Output;
            public static IObservable<string> OutputObservable => global::BeUtl.Language.Resources.S.Common.OutputObservable;
            public static string Settings => global::BeUtl.Language.Resources.S.Common.Settings;
            public static IObservable<string> SettingsObservable => global::BeUtl.Language.Resources.S.Common.SettingsObservable;
            public static class File {
                public static string IndexCreateNew => global::BeUtl.Language.Resources.S.Common.CreateNew;
                public static IObservable<string> IndexCreateNewObservable => global::BeUtl.Language.Resources.S.Common.CreateNewObservable;
                public static string IndexOpen => global::BeUtl.Language.Resources.S.Common.Open;
                public static IObservable<string> IndexOpenObservable => global::BeUtl.Language.Resources.S.Common.OpenObservable;
                public static string Close => global::BeUtl.Language.Resources.S.Common.Close;
                public static IObservable<string> CloseObservable => global::BeUtl.Language.Resources.S.Common.CloseObservable;
                public static string CloseProject => global::BeUtl.Language.Resources.S.Common.CloseProject;
                public static IObservable<string> CloseProjectObservable => global::BeUtl.Language.Resources.S.Common.CloseProjectObservable;
                public static string Save => global::BeUtl.Language.Resources.S.Common.SaveOverWrite;
                public static IObservable<string> SaveObservable => global::BeUtl.Language.Resources.S.Common.SaveOverWriteObservable;
                public static string SaveAll => global::BeUtl.Language.Resources.S.Common.SaveAll;
                public static IObservable<string> SaveAllObservable => global::BeUtl.Language.Resources.S.Common.SaveAllObservable;
                public static string SaveAs => global::BeUtl.Language.Resources.S.Common.SaveAs;
                public static IObservable<string> SaveAsObservable => global::BeUtl.Language.Resources.S.Common.SaveAsObservable;
                public static string RecentFiles => global::BeUtl.Language.Resources.S.Common.RecentFiles;
                public static IObservable<string> RecentFilesObservable => global::BeUtl.Language.Resources.S.Common.RecentFilesObservable;
                public static string RecentProjects => global::BeUtl.Language.Resources.S.Common.RecentProjects;
                public static IObservable<string> RecentProjectsObservable => global::BeUtl.Language.Resources.S.Common.RecentProjectsObservable;
                public static string Exit => global::BeUtl.Language.Resources.S.Common.Exit;
                public static IObservable<string> ExitObservable => global::BeUtl.Language.Resources.S.Common.ExitObservable;
                public static class CreateNew {
                    public static string Project => global::BeUtl.Language.Resources.S.Common.Project;
                    public static IObservable<string> ProjectObservable => global::BeUtl.Language.Resources.S.Common.ProjectObservable;
                    public static string File => global::BeUtl.Language.Resources.S.Common.File;
                    public static IObservable<string> FileObservable => global::BeUtl.Language.Resources.S.Common.FileObservable;
                }
                public static class Open {
                    public static string Project => global::BeUtl.Language.Resources.S.Common.Project;
                    public static IObservable<string> ProjectObservable => global::BeUtl.Language.Resources.S.Common.ProjectObservable;
                    public static string File => global::BeUtl.Language.Resources.S.Common.File;
                    public static IObservable<string> FileObservable => global::BeUtl.Language.Resources.S.Common.FileObservable;
                }
            }
            public static class Edit {
                public static string Undo => global::BeUtl.Language.Resources.S.Common.Undo;
                public static IObservable<string> UndoObservable => global::BeUtl.Language.Resources.S.Common.UndoObservable;
                public static string Redo => global::BeUtl.Language.Resources.S.Common.Redo;
                public static IObservable<string> RedoObservable => global::BeUtl.Language.Resources.S.Common.RedoObservable;
            }
            public static class Project {
                public static string Add => global::BeUtl.Language.Resources.S.Common.Add;
                public static IObservable<string> AddObservable => global::BeUtl.Language.Resources.S.Common.AddObservable;
                public static string Remove => global::BeUtl.Language.Resources.S.Common.Remove;
                public static IObservable<string> RemoveObservable => global::BeUtl.Language.Resources.S.Common.RemoveObservable;
            }
            public static class Scene {
                public static string CreateNew => global::BeUtl.Language.Resources.S.Common.CreateNew;
                public static IObservable<string> CreateNewObservable => global::BeUtl.Language.Resources.S.Common.CreateNewObservable;
                public static string Settings => global::BeUtl.Language.Resources.S.Common.Settings;
                public static IObservable<string> SettingsObservable => global::BeUtl.Language.Resources.S.Common.SettingsObservable;
                public static string IndexLayer => global::BeUtl.Language.Resources.S.Common.Layer;
                public static IObservable<string> IndexLayerObservable => global::BeUtl.Language.Resources.S.Common.LayerObservable;
                public static class Layer {
                    public static string Add => global::BeUtl.Language.Resources.S.Common.Add;
                    public static IObservable<string> AddObservable => global::BeUtl.Language.Resources.S.Common.AddObservable;
                    public static string Delete => global::BeUtl.Language.Resources.S.Common.Delete;
                    public static IObservable<string> DeleteObservable => global::BeUtl.Language.Resources.S.Common.DeleteObservable;
                    public static string Exclude => global::BeUtl.Language.Resources.S.Common.Exclude;
                    public static IObservable<string> ExcludeObservable => global::BeUtl.Language.Resources.S.Common.ExcludeObservable;
                    public static string Cut => global::BeUtl.Language.Resources.S.Common.Cut;
                    public static IObservable<string> CutObservable => global::BeUtl.Language.Resources.S.Common.CutObservable;
                    public static string Copy => global::BeUtl.Language.Resources.S.Common.Copy;
                    public static IObservable<string> CopyObservable => global::BeUtl.Language.Resources.S.Common.CopyObservable;
                    public static string Paste => global::BeUtl.Language.Resources.S.Common.Paste;
                    public static IObservable<string> PasteObservable => global::BeUtl.Language.Resources.S.Common.PasteObservable;
                }
            }
            public static class View {
                public static string Editors => global::BeUtl.Language.Resources.S.Common.Editors;
                public static IObservable<string> EditorsObservable => global::BeUtl.Language.Resources.S.Common.EditorsObservable;
                public static string Tools => global::BeUtl.Language.Resources.S.Common.Tools;
                public static IObservable<string> ToolsObservable => global::BeUtl.Language.Resources.S.Common.ToolsObservable;
            }
        }
    }
}
