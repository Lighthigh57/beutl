<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="File" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="AddLayer" xml:space="preserve">
    <value>レイヤーを追加</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>下</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>中心</value>
  </data>
  <data name="CharactorSpacing" xml:space="preserve">
    <value>字間</value>
  </data>
  <data name="CloseProject" xml:space="preserve">
    <value>プロジェクトを閉じる</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>新規作成</value>
  </data>
  <data name="CreateNewProject" xml:space="preserve">
    <value>プロジェクトを新規作成</value>
  </data>
  <data name="CreateNewScene" xml:space="preserve">
    <value>シーンを新規作成</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>カット</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>ダーク</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="DiscardChanges" xml:space="preserve">
    <value>変更を破棄</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="DurationTime" xml:space="preserve">
    <value>継続時間</value>
  </data>
  <data name="Easings" xml:space="preserve">
    <value>イージング</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="EditAnimation" xml:space="preserve">
    <value>アニメーションを編集</value>
  </data>
  <data name="Exclude" xml:space="preserve">
    <value>除外</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="Explorer" xml:space="preserve">
    <value>エクスプローラー</value>
  </data>
  <data name="Extensions" xml:space="preserve">
    <value>拡張機能</value>
  </data>
  <data name="FollowSystem" xml:space="preserve">
    <value>システムに従う</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="FontFamily" xml:space="preserve">
    <value>フォントファミリー</value>
  </data>
  <data name="FontStyle" xml:space="preserve">
    <value>フォントスタイル</value>
  </data>
  <data name="FontWeight" xml:space="preserve">
    <value>フォントの太さ</value>
  </data>
  <data name="FrameRate" xml:space="preserve">
    <value>フレームレート</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="HighContrast" xml:space="preserve">
    <value>ハイコントラスト</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>情報</value>
  </data>
  <data name="Layer" xml:space="preserve">
    <value>レイヤー</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>ライセンス</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>ライト</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>マージン</value>
  </data>
  <data name="MoveOneBack" xml:space="preserve">
    <value>後ろに移動</value>
  </data>
  <data name="MoveOneFront" xml:space="preserve">
    <value>前に移動</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>新しいフォルダー</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="Object" xml:space="preserve">
    <value>オブジェクト</value>
  </data>
  <data name="SaveOverWrite" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="Scene" xml:space="preserve">
    <value>シーン</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="SaveAll" xml:space="preserve">
    <value>すべて保存</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>名前を付けて保存</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>やり直し</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="Timeline" xml:space="preserve">
    <value>タイムライン</value>
  </data>
  <data name="SceneFile" xml:space="preserve">
    <value>シーンファイル</value>
  </data>
  <data name="SourceCode" xml:space="preserve">
    <value>ソースコード</value>
  </data>
  <data name="ThirdPartyLicenses" xml:space="preserve">
    <value>サードパーティライセンス</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>テーマ</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>開始時間</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="PickFont" xml:space="preserve">
    <value>フォントを選択</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>幅</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="ShowMore" xml:space="preserve">
    <value>さらに表示</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Split" xml:space="preserve">
    <value>分割</value>
  </data>
  <data name="SampleRate" xml:space="preserve">
    <value>サンプルレート</value>
  </data>
  <data name="SceneSettings" xml:space="preserve">
    <value>シーン設定</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>はい</value>
  </data>
</root>